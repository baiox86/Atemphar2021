{"remainingRequest":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\edits\\EditarPessoa.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\edits\\EditarPessoa.vue","mtime":1617391304278},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar axios = require(\"axios\");\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    bus.$emit(\"logout\");\n  }\n});\nimport { bus } from \"../../main.js\";\nimport { ModelListSelect } from \"vue-search-select\";\nexport default {\n  props: {\n    dadosPessoa: {\n      type: String,\n      required: true\n    }\n  },\n  activated: function activated() {\n    var _this = this;\n\n    axios.get(\"api/getAllPessoasIdNome/\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      if (response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n\n      _this.allPessoa = response.data;\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    this.input.nome = this.dadosPessoa.nome;\n    this.input.email = this.dadosPessoa.email;\n    this.input.genero = this.dadosPessoa.genero;\n    this.input.telefone = this.dadosPessoa.telefone;\n    this.input.zona = this.dadosPessoa.zona;\n    this.input.nif = this.dadosPessoa.nif;\n    this.input.dataNasc = this.dadosPessoa.dataNasc;\n    this.input.comoConheceu = this.dadosPessoa.comoConheceu === 'Pessoa' ? this.dadosPessoa.comoConheceu : this.dadosPessoa.comoConheceu === 'E-Mail' ? this.dadosPessoa.comoConheceu : this.dadosPessoa.comoConheceu === 'Redes Sociais' ? this.dadosPessoa.comoConheceu : 'Local';\n    this.input.atravesDe = this.dadosPessoa.comoConheceu === 'Pessoa' ? this.dadosPessoa.atravesQuem : this.dadosPessoa.comoConheceu === 'E-Mail' ? this.dadosPessoa.atravesQuem : this.dadosPessoa.comoConheceu === 'Redes Sociais' ? this.dadosPessoa.atravesQuem : this.dadosPessoa.comoConheceu;\n  },\n  deactivated: function deactivated() {\n    this.input.nome = \"\";\n    this.input.email = \"\";\n    this.input.genero = \"\";\n    this.input.telefone = \"\";\n    this.input.zona = \"\";\n    this.input.nif = \"\";\n    this.input.dataNasc = \"\";\n    this.input.comoConheceu = \"\";\n    this.input.atravesDe = \"\";\n  },\n  data: function data() {\n    var here = this;\n    return {\n      input: {\n        jaFreq: true,\n        nome: \"\",\n        inputPessoa: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        dataNasc: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\"\n      },\n      allPessoa: [],\n      buttonText: \"Adicionar Pessoa\"\n    };\n  },\n  methods: {\n    switchComponent: function switchComponent(comp) {\n      bus.$emit(\"switchComp\", comp);\n    },\n    toggleInsert: function toggleInsert() {\n      if (this.input.jaFreq) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Adicionar Pessoa\";\n      }\n\n      this.input.jaFreq = !this.input.jaFreq;\n    },\n    checkIfNoEvents: function checkIfNoEvents(aux) {\n      return aux = 0 ? true : false;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      //validar campos\n      if (this.input.nome == \"\" || this.input.nome == null || this.input.email == \"\" || this.input.email == null || this.input.telefone == \"\" || this.input.telefone == null || this.input.zona == \"\" || this.input.zona == null || this.input.genero == \"\" || this.input.genero == null || this.input.dataNasc == \"\" || this.input.dataNasc == null) {\n        this.$toasted.error(\"campos em falta!\");\n        return;\n      }\n\n      if (this.input.telefone.length != 9) {\n        this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n        return;\n      }\n\n      if (!/^\\d+$/.test(this.input.telefone)) {\n        this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n        return;\n      }\n\n      if (this.input.nif != \"\" && this.input.nif.length != 9) {\n        this.$toasted.error(\"NIF de tamanho inválido!\");\n        return;\n      }\n\n      if (!/\\S+@\\S+\\.\\S+/.test(this.input.email)) {\n        this.$toasted.error(\"Formato de email inválido!\");\n        return;\n      }\n\n      if (this.input.comoConheceu.valueOf() != \"Local\".valueOf() && (this.input.atravesDe == null || this.input.atravesDe == \"\")) {\n        this.$toasted.error(\"Obrigatório selecionar pessoa por onde conheceu!\");\n        return;\n      } //(nome, email, telefone, zona, idade, genero, nif, comoConheceu, atravesQuem)\n\n\n      axios.put(\"api/editPessoa/\" + this.dadosPessoa.idPessoa, {\n        nome: this.input.nome,\n        email: this.input.email,\n        telefone: this.input.telefone,\n        zona: this.input.zona,\n        dataNasc: this.input.dataNasc,\n        genero: this.input.genero,\n        nif: this.input.nif,\n        comoConheceu: this.input.comoConheceu === \"Local\" ? this.input.atravesDe : this.input.comoConheceu,\n        atravesDe: this.input.comoConheceu === \"Local\" ? null : this.input.atravesDe.id\n      }, {\n        withCredentials: true,\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        if (response.status === 201) {\n          _this2.$toasted.error(\"Pessoa editada com sucesso!\");\n\n          _this2.switchComponent('PersonsTablesMenu');\n        }\n\n        if (response.data == '1062') {\n          _this2.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n\n          return;\n        }\n      }).catch(function (error) {\n        _this2.$toasted.error(\"Erro a editar Pessoa!\");\n      });\n    }\n  },\n  components: {\n    ModelListSelect: ModelListSelect\n  }\n};",{"version":3,"sources":["EditarPessoa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <br>\n    <div class=\"voltarPessoa\">\n      <button v-on:click=\"switchComponent('PersonsTablesMenu')\">\n        <i class=\"fas fa-reply\"></i>Voltar\n      </button>\n    </div>\n    <br>\n    <h1>Editar Pessoa</h1>\n    <br>\n    <div class=\"editarPessoa\">\n      <div class=\"form\">\n        <!--<div class=\"novaPessoa\">\n        <a class=\"fas fa-user-plus\">\n          <input type=\"button\" v-model=\"buttonText\" v-on:click=\"toggleInsert()\">\n        </a>\n        <br>\n        </div>-->\n        <div class=\"nome\">\n          <label>Nome:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.nome\" name=\"nome\">\n        </div>\n        <div class=\"email\">\n          <label>Email:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.email\" name=\"email\">\n        </div>\n        <div class=\"telefone\">\n          <label>Telefone:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.telefone\" name=\"telefone\">\n        </div>\n        <div class=\"genero\">\n          <label>Género:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"radio\" v-model=\"input.genero\" name=\"m\" value=\"M\"> M\n          <br>\n          <input type=\"radio\" v-model=\"input.genero\" name=\"f\" value=\"F\"> F\n          <br>\n        </div>\n        <div class=\"zona\">\n          <label>Zona:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.zona\" name=\"zona\">\n        </div>\n        <div class=\"idade\">\n          <label>Data de Nascimento:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"date\" v-model=\"input.dataNasc\" name=\"idade\">\n        </div>\n        <div class=\"nif\">\n          <label>NIF:</label>\n          <br>\n          <input type=\"text\" v-model=\"input.nif\" name=\"nif\">\n        </div>\n        <div class=\"comoConheceu\">\n          <label>Como Conheceu:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <select v-model=\"input.comoConheceu\">\n            <option>Pessoa</option>\n            <option value=\"Local\">Folheto em Local</option>\n            <option>Redes Sociais</option>\n            <option>E-Mail</option>\n          </select>\n          <template\n            v-if=\"input.comoConheceu === 'Pessoa' || input.comoConheceu === 'Redes Sociais' || input.comoConheceu === 'E-Mail'\"\n          >\n            <!-- conheceu através de uma pessoa -->\n            <!-- listar pessoas -->\n            <!--\n            <input name=\"inputPessoaConheceu\" v-model=\"input.atravesDe\" list=\"listaPessoaAtravesDe\">\n              <datalist id=\"listaPessoaAtravesDe\">\n                  <option v-for=\"(pessoa, key) in allPessoa\" :key=\"key\">{{pessoa.idPessoa}}: {{pessoa.nome}}</option> \n              </datalist>\n            -->\n            <div class=\"atravesQuem\">\n              <vue-single-select\n                      v-model=\"input.atravesDe\"\n                      :options=\"allPessoa\"\n                      placeholder= \"Procurar por nome,email ou telemóvel\"\n                      option-label=\"nome\"\n              ></vue-single-select>\n            </div>\n          </template>\n          <template v-else-if=\"input.comoConheceu === 'Local'\">\n            <!-- conheceu através de um folheto num local -->\n            <!--<label>Local:</label>\n            <br>-->\n            <div class=\"local\">\n              <input type=\"text\" v-model=\"input.atravesDe\" name=\"local\" placeholder=\"Local\">\n            </div>\n          </template>\n        </div>\n        <div class=\"registar\">\n          <button type=\"submit\" v-on:click.prevent=\"submit()\">\n            <i class=\"far fa-save\"></i> Registar\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nvar axios = require(\"axios\");\naxios.interceptors.response.use(\n  response => response,\n  error => {\n      if (error.response.status === 401) { \n        bus.$emit(\"logout\");\n      }\n });\n\nimport { bus } from \"../../main.js\";\nimport { ModelListSelect } from \"vue-search-select\";\nexport default {\n  props: {\n    dadosPessoa: {\n      type: String,\n      required: true\n    }\n  },\n  activated() {\n    axios\n      .get(\"api/getAllPessoasIdNome/\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        if (response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n        this.allPessoa = response.data;\n      })\n      .catch(error => {\n       if(error.response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n      });\n\n\n    this.input.nome = this.dadosPessoa.nome;\n    this.input.email = this.dadosPessoa.email;\n    this.input.genero = this.dadosPessoa.genero;\n    this.input.telefone = this.dadosPessoa.telefone;\n    this.input.zona = this.dadosPessoa.zona;\n    this.input.nif = this.dadosPessoa.nif;\n    this.input.dataNasc = this.dadosPessoa.dataNasc;\n    this.input.comoConheceu = \n    (this.dadosPessoa.comoConheceu === 'Pessoa' ? this.dadosPessoa.comoConheceu :\n     this.dadosPessoa.comoConheceu === 'E-Mail' ? this.dadosPessoa.comoConheceu :\n     this.dadosPessoa.comoConheceu === 'Redes Sociais'? this.dadosPessoa.comoConheceu:\n     'Local'\n    );\n    this.input.atravesDe = (this.dadosPessoa.comoConheceu === 'Pessoa' ? this.dadosPessoa.atravesQuem :\n     this.dadosPessoa.comoConheceu === 'E-Mail' ? this.dadosPessoa.atravesQuem :\n     this.dadosPessoa.comoConheceu === 'Redes Sociais'? this.dadosPessoa.atravesQuem:\n     this.dadosPessoa.comoConheceu\n    );\n  },\n  deactivated() {\n    this.input.nome = \"\";\n    this.input.email = \"\";\n    this.input.genero = \"\";\n    this.input.telefone = \"\";\n    this.input.zona = \"\";\n    this.input.nif = \"\";\n    this.input.dataNasc = \"\";\n    this.input.comoConheceu = \"\";\n    this.input.atravesDe = \"\";\n  },\n  data() {\n    var here = this;\n    return {\n      input: {\n        jaFreq: true,\n        nome: \"\",\n        inputPessoa: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        dataNasc: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\"\n      },\n      allPessoa: [],\n      buttonText: \"Adicionar Pessoa\"\n    };\n  },\n  methods: {\n    switchComponent(comp) {\n      bus.$emit(\"switchComp\", comp);\n    },\n    toggleInsert: function() {\n      if (this.input.jaFreq) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Adicionar Pessoa\";\n      }\n      this.input.jaFreq = !this.input.jaFreq;\n    },\n    checkIfNoEvents: function(aux) {\n      return (aux = 0 ? true : false);\n    },\n    submit: function() {\n      //validar campos\n\n      if (\n          this.input.nome == \"\" ||\n          this.input.nome == null ||\n          this.input.email == \"\" ||\n          this.input.email == null ||\n          this.input.telefone == \"\" ||\n          this.input.telefone == null ||\n          this.input.zona == \"\" ||\n          this.input.zona == null ||\n          this.input.genero == \"\" ||\n          this.input.genero == null ||\n          this.input.dataNasc == \"\" ||\n          this.input.dataNasc == null\n        ) {\n          this.$toasted.error(\"campos em falta!\");\n          return;\n        }\n\n        if(this.input.telefone.length != 9){\n          this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n          return;\n        }\n\n        if(!/^\\d+$/.test(this.input.telefone)){\n          this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n          return;\n        }\n\n        if(this.input.nif != \"\" && this.input.nif.length != 9){\n          this.$toasted.error(\"NIF de tamanho inválido!\");\n          return;\n        }\n\n        if(!/\\S+@\\S+\\.\\S+/.test(this.input.email)){\n          this.$toasted.error(\"Formato de email inválido!\");\n          return;\n        }\n\n        \n\n        if(this.input.comoConheceu.valueOf() != \"Local\".valueOf() && (this.input.atravesDe == null || this.input.atravesDe == \"\")){\n          this.$toasted.error(\"Obrigatório selecionar pessoa por onde conheceu!\");\n          return;\n        }\n      //(nome, email, telefone, zona, idade, genero, nif, comoConheceu, atravesQuem)\n      axios\n        .put(\n          \"api/editPessoa/\" + this.dadosPessoa.idPessoa,\n          {\n            nome: this.input.nome,\n            email: this.input.email,\n            telefone: this.input.telefone,\n            zona: this.input.zona,\n            dataNasc: this.input.dataNasc,\n            genero: this.input.genero,\n            nif: this.input.nif,\n            comoConheceu:\n              this.input.comoConheceu === \"Local\"\n                ? this.input.atravesDe\n                : this.input.comoConheceu,\n            atravesDe:\n              this.input.comoConheceu === \"Local\" ? null : this.input.atravesDe.id\n          },\n          {\n            withCredentials: true,\n            headers: {\n              Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n            }\n          }\n        )\n        .then(response => {\n            if (response.status === 201) {\n              this.$toasted.error(\"Pessoa editada com sucesso!\");\n              this.switchComponent('PersonsTablesMenu');\n            }\n            if(response.data == '1062'){\n              this.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n              return;\n            }\n        })\n        .catch(error => {\n\n          this.$toasted.error(\"Erro a editar Pessoa!\");\n        });\n    }\n  },\n  components: {\n    ModelListSelect\n  }\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans\");\n@import url(\"https://www.w3schools.com/w3css/4/w3.css\");\n\nh1 {\n  text-align: center;\n  font-family: \"Open Sans\";\n}\n\n.voltarPessoa button {\n  font-size: 20px;\n  margin-left: 25px;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  background-color: #eedec0;\n}\n.voltarPessoa i {\n  font-size: 17px;\n  margin-right: 3px;\n}\n.voltarPessoa button:hover {\n  background-color: #fdf5e6\n}\n\n.editarPessoa {\n  font-family: \"Open Sans\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editarPessoa .form {\n  display: inline-grid;\n  grid-row-gap: 10px;\n  grid-column-gap: 50px;\n  background-color: oldlace;\n  width: 100%;\n}\n\n.editarPessoa .form .obrigatorio{\n  color: red;\n}\n\n.editarPessoa .nome {\n  grid-column-start: 1;\n  grid-row-start: 1;\n  margin-top: 10px;\n  margin-left: 115px;\n}\n\n.editarPessoa .nome input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .email {\n  grid-column-start: 2;\n  grid-row-start: 1;\n  margin-top: 10px;\n  margin-right: 115px;\n}\n\n.editarPessoa .email input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n.editarPessoa .telefone {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 2;\n}\n\n.editarPessoa .telefone input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .zona {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 2;\n}\n\n.editarPessoa .zona input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .nif {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 3;\n}\n\n.editarPessoa .nif input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .genero {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 3;\n}\n\n.editarPessoa .idade {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 4;\n}\n\n.editarPessoa .idade input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .comoConheceu {\n  width: 50%;\n  display: -webkit-box;\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 4;\n}\n\n.editarPessoa .comoConheceu select {\n  height: 30px;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n}\n\n.editarPessoa .comoConheceu .atravesQuem {\n  width: 117%;\n  margin-left: 9px;\n  margin-top: 17px;\n}\n\n.editarPessoa .comoConheceu .local {\n  width: 105%;\n  margin-left: 9px;\n}\n\n.editarPessoa .comoConheceu .local input {\n  width: 117%;\n  margin-top: 22px;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.editarPessoa .registar {\n  margin-right: 115px;\n  margin-bottom: 30px;\n  grid-column-start: 2;\n  grid-row-start: 5;\n  justify-self: end;\n}\n\n.editarPessoa .registar button {\n  height: 50px;\n  font-size: medium;\n  cursor: pointer;\n  border: none;\n  background-color: #e99d72;\n  border-radius: 6px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: auto;\n}\n.editarPessoa .registar button:hover {\n  background-color: #fab995;\n}\n</style>"],"sourceRoot":"src/components/edits"}]}