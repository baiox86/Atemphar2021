{"remainingRequest":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\edits\\EditarEvento.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\edits\\EditarEvento.vue","mtime":1617391304252},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar axios = require(\"axios\");\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    bus.$emit(\"logout\");\n  }\n});\nimport { ModelListSelect } from \"vue-search-select\";\nimport { bus } from \"../../main.js\";\nexport default {\n  props: {\n    dadosEvento: {\n      type: String,\n      required: true\n    }\n  },\n  activated: function activated() {\n    var _this = this;\n\n    axios.get(\"api/getAllPessoasNaoOradores\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allPersons = response.data;\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    axios.get(\"api/getAllOradores\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allOrators = response.data;\n    }).catch(function (error) {\n      if (response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    axios.get(\"api/getAllPessoas\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allPersonsWithOrators = response.data;\n    }).catch(function (error) {\n      if (response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    this.input.nome = this.dadosEvento.nomeEvento, this.input.tipoEvento = this.dadosEvento.tipoEvento, this.input.inputOrador = this.dadosEvento.idOrador, this.input.data = this.dadosEvento.dataEvento.substring(0, 22), this.input.local = this.dadosEvento.localEvento, this.input.observacoes = this.dadosEvento.observacoes, this.input.custo = parseFloat(this.dadosEvento.custo);\n  },\n  data: function data() {\n    var here = this;\n    return {\n      input: {\n        nome: \"\",\n        tipoEvento: \"\",\n        oradorRecorrente: true,\n        inputOrador: \"\",\n        inputPessoa: \"\",\n        data: \"\",\n        local: \"\",\n        observacoes: \"\",\n        custo: \"\",\n        especialidade: \"\",\n        notNovaPessoaOrador: true\n      },\n      inputNovaPessoa: {\n        nome: \"\",\n        inputPessoa: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        dataNasc: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\"\n      },\n      allPersons: [],\n      allOrators: [],\n      allPersonsWithOrators: [],\n      buttonText: \"Novo Orador\",\n      buttonPessoaText: \"Adicionar Pessoa\"\n    };\n  },\n  methods: {\n    switchComponent: function switchComponent(comp) {\n      bus.$emit(\"switchComp\", comp);\n    },\n    clearFields: function clearFields() {\n      this.input.nome = \"\", this.input.tipoEvento = \"\", this.input.oradorRecorrente = \"true\", this.input.inputOrador = \"\", this.input.inputPessoa = \"\", this.input.data = \"\", this.input.local = \"\", this.input.observacoes = \"\", this.input.custo = \"\", this.input.especialidade = \"\";\n      this.switchComponent('EventsTablesMenu');\n    },\n    toggleInsert: function toggleInsert() {\n      if (this.input.oradorRecorrente) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Novo Orador\";\n      }\n\n      this.input.oradorRecorrente = !this.input.oradorRecorrente;\n    },\n    togglePessoaInsert: function togglePessoaInsert() {\n      if (this.input.notNovaPessoaOrador) {\n        this.buttonPessoaText = \"Cancelar\";\n      } else {\n        this.buttonPessoaText = \"Adicionar Pessoa\";\n      }\n\n      this.input.notNovaPessoaOrador = !this.input.notNovaPessoaOrador;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      //axios.post\n      //Eventos com orador: Palestras e Workshops\n      //Eventos com custo: Workshops\n      //verificar se o tipo de palestra está vazio:\n      if (this.input.tipoEvento === \"\") {\n        this.$toasted.error(\"Tipo de evento vazio!\");\n        return;\n      } //verificar se há outros campos obrigatorios vazios\n\n\n      if (this.input.nome === \"\" || this.input.oradorRecorrente === \"\" || this.input.data === \"\" || this.input.local === \"\") {\n        this.$toasted.error(\"Campos obrigatorios vazios!\");\n        return;\n      } //validar a existencia do ID escolhido de Pessoa (para prevenir inserções manuais incorrectas)\n      //verificar se orador é novo ou antigo, inserir orador novo na tabela.-\n\n\n      var oradorAux; //se a palestra for uma palestra com orador\n\n      if (this.input.tipoEvento === \"Palestra\" || this.input.tipoEvento === \"Workshop\") {\n        //se for um orador novo\n        if (!this.input.oradorRecorrente) {\n          //se também for uma pessoa nova\n          if (!this.input.notNovaPessoaOrador) {\n            if (this.inputNovaPessoa.nome == \"\" || this.inputNovaPessoa.nome == null || this.inputNovaPessoa.email == \"\" || this.inputNovaPessoa.email == null || this.inputNovaPessoa.telefone == \"\" || this.inputNovaPessoa.telefone == null || this.inputNovaPessoa.zona == \"\" || this.inputNovaPessoa.zona == null || this.inputNovaPessoa.genero == \"\" || this.inputNovaPessoa.genero == null || this.inputNovaPessoa.dataNasc == \"\" || this.inputNovaPessoa.dataNasc == null) {\n              this.$toasted.error(\"campos em falta!\");\n              return;\n            }\n\n            if (this.inputNovaPessoa.telefone.length != 9) {\n              this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n              return;\n            }\n\n            if (!/^\\d+$/.test(this.inputNovaPessoa.telefone)) {\n              this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n              return;\n            }\n\n            if (this.inputNovaPessoa.nif != \"\" && this.inputNovaPessoa.nif.length != 9) {\n              this.$toasted.error(\"NIF de tamanho inválido!\");\n              return;\n            }\n\n            if (!/\\S+@\\S+\\.\\S+/.test(this.inputNovaPessoa.email)) {\n              this.$toasted.error(\"Formato de email inválido!\");\n              return;\n            }\n\n            axios.post(\"api/postPessoa\", {\n              nome: this.inputNovaPessoa.nome,\n              email: this.inputNovaPessoa.email,\n              telefone: this.inputNovaPessoa.telefone,\n              zona: this.inputNovaPessoa.zona,\n              dataNasc: this.inputNovaPessoa.dataNasc,\n              genero: this.inputNovaPessoa.genero,\n              nif: this.inputNovaPessoa.nif,\n              comoConheceu: this.inputNovaPessoa.comoConheceu === \"Local\" ? this.inputNovaPessoa.atravesDe : this.inputNovaPessoa.comoConheceu,\n              atravesDe: this.inputNovaPessoa.comoConheceu === \"Local\" ? null : this.inputNovaPessoa.atravesDe\n            }, {\n              withCredentials: true,\n              headers: {\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n              }\n            }).then(function (response) {\n              oradorAux = response.data; //post na tabela de oradores\n\n              axios.post(\"api/postOrador\", {\n                idOrador: oradorAux,\n                especialidade: _this2.input.especialidade\n              }, {\n                withCredentials: true,\n                headers: {\n                  Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n                }\n              }).then(function (response) {\n                if (response.code === 201) {\n                  _this2.$toasted.error(\"Inserção de evento realizada com sucesso!\");\n\n                  _this2.switchComponent('EventsTablesMenu');\n                }\n\n                if (response.data == '1062') {\n                  _this2.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n\n                  return;\n                }\n              }).catch(function (error) {\n                _this2.$toasted.error(\"Erro a inserir pessoa nos oradores\");\n              }); //post Evento\n\n              axios.put(\"api/editEvento/\" + _this2.dadosEvento.idEvento, {\n                idOrador: oradorAux,\n                nomeEvento: _this2.input.nome,\n                dataEvento: _this2.input.data,\n                localEvento: _this2.input.local,\n                tipoEvento: _this2.input.tipoEvento,\n                observacoes: _this2.input.observacoes\n              }, {\n                withCredentials: true,\n                headers: {\n                  Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n                }\n              }).then(function (response) {\n                if (response.code === 201) {\n                  _this2.$toasted.error(\"Inserção de pessoa realizada com sucesso!\");\n                }\n\n                _this2.clearFields();\n\n                _this2.switchComponent('EventsTablesMenu');\n              }).catch(function (error) {\n                _this2.$toasted.error(\"Erro na inserção de evento com nova pessoa!\");\n              });\n            }).catch(function (error) {\n              if (error.response.status === 401) {\n                _this2.$toasted.error(\"Sessão expirou.\");\n\n                bus.$emit(\"logout\");\n              }\n            });\n            bus.$emit(\"submitPart\", \"Nova pessoa como orador inserida!\");\n            this.$forceUpdate();\n            return;\n          } else {\n            //se não for uma pessoa nova\n            //post orador\n            axios.post(\"/api/postOrador\", {\n              idOrador: this.input.inputPessoa,\n              especialidade: this.input.especialidade\n            }, {\n              withCredentials: true,\n              headers: {\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n              }\n            }).then(function (response) {}).catch(function (errors) {\n              if (errors.response.status === 400) {\n                _this2.$toasted.error(\"Campos incorrectos ou incompletos!\");\n              }\n\n              if (errors.response.status === 401) {\n                _this2.$toasted.error(\"Sessão expirou.\");\n\n                bus.$emit(\"logout\");\n              }\n            });\n          }\n        } else {\n          //se for um orador já existente\n          if (!this.allOrators.some(function (item) {\n            return item.idOrador == _this2.input.inputOrador;\n          })) {\n            this.$toasted.error(\"ID de Orador introduzido inexistente ou vazio!\");\n            return;\n          } else {\n            oradorAux = this.input.inputOrador;\n          }\n        }\n      } //---------------------------------------------------------------------------------------------------\n      //INSERÇÕES DE EVENTO\n      //Evento: idOrador, nome, data, local, tipoEvento, observacoes\n\n\n      switch (this.input.tipoEvento) {\n        case \"Palestra\":\n          axios.put(\"api/editEvento/\" + this.dadosEvento.idEvento, {\n            idOrador: oradorAux,\n            nome: this.input.nome,\n            data: this.input.data,\n            local: this.input.local,\n            tipoEvento: this.input.tipoEvento,\n            observacoes: this.input.observacoes\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function (response) {\n            if (response.status === 201) {\n              _this2.$toasted.error(\"Evento\" + _this2.input.nome + \"Editado com sucesso!\");\n\n              _this2.clearFields();\n\n              _this2.switchComponent('EventsTablesMenu');\n            }\n          }).catch(function (error) {\n            if (response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n\n            _this2.$toasted.error(\"Erro na inserção de evento!\");\n          });\n          break;\n\n        case \"Workshop\":\n          if (this.input.custo == \"\" || this.input.custo == null) {\n            this.$toasted.error(\"Custo inválido!\");\n            return;\n          } //inserir workshop e custo\n\n\n          axios.put(\"api/editEvento/\" + this.dadosEvento.idEvento, {\n            idOrador: oradorAux,\n            nomeEvento: this.input.nome,\n            dataEvento: this.input.data,\n            localEvento: this.input.local,\n            tipoEvento: this.input.tipoEvento,\n            observacoes: this.input.observacoes\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function (response) {\n            if (response.status === 201) {\n              axios.put(\"api/editWorkshop/\" + _this2.dadosEvento.idEvento, {\n                custo: _this2.input.custo\n              }, {\n                withCredentials: true,\n                headers: {\n                  Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n                }\n              }).then(function (response) {\n                if (response.status === 201) {\n                  _this2.$toasted.error(\"Workshop Editado!\");\n\n                  _this2.clearFields();\n\n                  _this2.switchComponent('EventsTablesMenu');\n                }\n              }).catch(function (errors) {\n                if (errors.response.status === 400) {\n                  _this2.$toasted.error(\"Campos incorrectos ou incompletos!\");\n                }\n\n                if (errors.response.status === 401) {\n                  _this2.$toasted.error(\"Sessão expirou.\");\n\n                  bus.$emit(\"logout\");\n                }\n              });\n            }\n          }).catch(function (errors) {\n            if (errors.response.status === 400) {\n              _this2.$toasted.error(\"Campos incorrectos ou incompletos!\");\n            }\n\n            if (errors.response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n          });\n          break;\n\n        default:\n          //isto significa que é um evento sem orador, sem custo.\n          axios.put(\"api/editEvento/\" + this.dadosEvento.idEvento, {\n            idOrador: null,\n            nome: this.input.nome,\n            data: this.input.data,\n            local: this.input.local,\n            tipoEvento: this.input.tipoEvento,\n            observacoes: this.input.observacoes\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function (response) {\n            if (response.status === 201) {\n              _this2.$toasted.error(\"Evento\" + _this2.input.nome + \" editado com sucesso!\");\n\n              _this2.clearFields();\n\n              _this2.switchComponent('EventsTablesMenu');\n            }\n          }).catch(function (error) {\n            if (error.response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n          });\n          break;\n      }\n    }\n  },\n  components: {\n    ModelListSelect: ModelListSelect\n  }\n};",{"version":3,"sources":["EditarEvento.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <br>\n    <div class=\"voltarEvento\">\n      <button v-on:click=\"switchComponent('EventsTablesMenu')\">\n        <i class=\"fas fa-reply\"></i>Voltar\n      </button>\n    </div>\n    <br>\n    <h1>Editar Evento</h1>\n    <br>\n    <div class=\"editarEvento\">\n      <div id=\"fields\" class=\"fields\">\n        <div class=\"nomeEvento\">\n          <label>Nome:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.nome\" name=\"nome\">\n        </div>\n        <div class=\"tipo\">\n          <label>Tipo de Evento:</label>\n          <br>\n          {{this.input.tipoEvento}}\n        </div>\n\n        <div class=\"data\">\n          <label>Data:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"datetime-local\" v-model=\"input.data\" name=\"data\">\n        </div>\n        <div class=\"localEvento\">\n          <label>Local:<i class=\"obrigatorio\">*</i></label>\n          <br>\n          <input type=\"text\" v-model=\"input.local\" name=\"local\">\n        </div>\n        <div class=\"observacoes\">\n          <label>Observações:</label>\n          <br>\n          <textarea type=\"text\" v-model=\"input.observacoes\" name=\"observacoes\"></textarea>\n        </div>\n\n        <template v-if=\"input.tipoEvento === 'Workshop'\">\n          <div class=\"custo\">\n            <label>Custo:<i class=\"obrigatorio\">*</i></label>\n            <br>\n            <input type=\"number\" v-model=\"input.custo\" name=\"custo\" min=\"0.01\" step=\"0.01\">\n          </div>\n        </template>\n\n        <template v-if=\"input.tipoEvento === 'Workshop' || input.tipoEvento === 'Palestra'\">\n          <div class=\"botaoOradorExistente\">\n            <a class=\"fas fa-user-plus\">\n              <input type=\"button\" v-model=\"buttonText\" v-on:click=\"toggleInsert()\">\n            </a>\n            <br>\n          </div>\n          <template v-if=\"input.oradorRecorrente\">\n            <div class=\"orador\">\n              <label>Orador:</label><i class=\"obrigatorio\">*</i>\n              <br>\n              <model-list-select\n                :list=\"allOrators\"\n                v-model=\"input.inputOrador\"\n                option-value=\"idOrador\"\n                option-text=\"nome\"\n                placeholder=\"Escolher\"\n              ></model-list-select>\n            </div>\n          </template>\n\n          <template v-else>\n            <div class=\"novoOrador\">\n              <div class=\"botaoPessoaExistente\">\n                <a class=\"fas fa-user-plus\">\n                  <input type=\"button\" v-model=\"buttonPessoaText\" v-on:click=\"togglePessoaInsert()\">\n                </a>\n                <br>\n              </div>\n              <template v-if=\"input.notNovaPessoaOrador\">\n                <div class=\"listaPessoas\">\n                  <label>Novo Orador:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <model-list-select\n                    :list=\"allPersons\"\n                    v-model=\"input.inputPessoa\"\n                    option-value=\"idPessoa\"\n                    option-text=\"nome\"\n                    placeholder=\"Escolher\"\n                  ></model-list-select>\n                </div>\n              </template>\n\n              <!-- terceira opção ->inserir nova pessoa -->\n              <template v-else>\n                <div class=\"nome\">\n                  <label>Nome:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"text\" v-model=\"inputNovaPessoa.nome\" name=\"nome\">\n                </div>\n                <div class=\"email\">\n                  <label>Email:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"text\" v-model=\"inputNovaPessoa.email\" name=\"email\">\n                </div>\n                <div class=\"telefone\">\n                  <label>Telefone:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"text\" v-model=\"inputNovaPessoa.telefone\" name=\"telefone\">\n                </div>\n                <div class=\"genero\">\n                  <label>Género:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"radio\" v-model=\"inputNovaPessoa.genero\" name=\"m\" value=\"M\"> M\n                  <br>\n                  <input type=\"radio\" v-model=\"inputNovaPessoa.genero\" name=\"f\" value=\"F\"> F\n                  <br>\n                </div>\n                <div class=\"zona\">\n                  <label>Zona:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"text\" v-model=\"inputNovaPessoa.zona\" name=\"zona\">\n                </div>\n                <div class=\"idade\">\n                  <label>Data de Nascimento:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <input type=\"date\" v-model=\"inputNovaPessoa.dataNasc\" name=\"idade\">\n                </div>\n                <div class=\"nif\">\n                  <label>NIF:</label>\n                  <br>\n                  <input type=\"text\" v-model=\"inputNovaPessoa.nif\" name=\"nif\">\n                </div>\n                <div class=\"comoConheceu\">\n                  <label>Como Conheceu:<i class=\"obrigatorio\">*</i></label>\n                  <br>\n                  <select v-model=\"inputNovaPessoa.comoConheceu\">\n                    <option>Pessoa</option>\n                    <option value=\"Local\">Folheto em Local</option>\n                    <option>Redes Sociais</option>\n                    <option>E-Mail</option>\n                  </select>\n\n                  <template\n                    v-if=\"inputNovaPessoa.comoConheceu === 'Pessoa' || inputNovaPessoa.comoConheceu === 'Redes Sociais' || input.comoConheceu === 'E-Mail'\"\n                  >\n                    <div class=\"atravesQuem\">\n                      <model-list-select\n                        :list=\"allPersonsWithOrators\"\n                        v-model=\"inputNovaPessoa.atravesDe\"\n                        option-value=\"idPessoa\"\n                        option-text=\"nome\"\n                        placeholder=\"Escolher\"\n                      ></model-list-select>\n                    </div>\n                  </template>\n                  <template v-else-if=\"inputNovaPessoa.comoConheceu === 'Local'\">\n                    <!-- conheceu através de um folheto num local -->\n                    <div class=\"local\">\n                      <!--<label>Local:</label>\n                      <br>-->\n                      <input\n                        type=\"text\"\n                        v-model=\"inputNovaPessoa.atravesDe\"\n                        name=\"local\"\n                        placeholder=\"Local\"\n                      >\n                    </div>\n                  </template>\n                </div>\n              </template>\n\n              <div class=\"especialidade\">\n                <label>Especialidade:<i class=\"obrigatorio\">*</i></label>\n                <br>\n                <input name=\"inputEspecialidade\" v-model=\"input.especialidade\">\n              </div>\n            </div>\n          </template>\n        </template>\n\n        <div class=\"registar\">\n          <button type=\"submit\" v-on:click.prevent=\"submit()\">\n            <i class=\"far fa-save\"></i> Registar\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nvar axios = require(\"axios\");\naxios.interceptors.response.use(\n  response => response,\n  error => {\n      if (error.response.status === 401) { \n        bus.$emit(\"logout\");\n      }\n });\n\nimport { ModelListSelect } from \"vue-search-select\";\nimport { bus } from \"../../main.js\";\nexport default {\n  props: {\n    dadosEvento: {\n      type: String,\n      required: true\n    }\n  },\n  activated() {\n    axios\n      .get(\"api/getAllPessoasNaoOradores\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allPersons = response.data;\n      })\n      .catch(error => {\n       if(error.response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n      });\n\n    axios\n      .get(\"api/getAllOradores\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allOrators = response.data;\n      })\n      .catch(error => {\n        if(response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n      });\n\n    axios\n      .get(\"api/getAllPessoas\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allPersonsWithOrators = response.data;\n\n      })\n      .catch(error => {\n       if(response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n      });\n\n      (this.input.nome = this.dadosEvento.nomeEvento),\n      (this.input.tipoEvento = this.dadosEvento.tipoEvento),\n      (this.input.inputOrador = this.dadosEvento.idOrador),\n      (this.input.data = this.dadosEvento.dataEvento.substring(0, 22)),\n      (this.input.local = this.dadosEvento.localEvento),\n      (this.input.observacoes = this.dadosEvento.observacoes),\n      (this.input.custo = parseFloat(this.dadosEvento.custo));\n  },\n  data() {\n    var here = this;\n    return {\n      input: {\n        nome: \"\",\n        tipoEvento: \"\",\n        oradorRecorrente: true,\n        inputOrador: \"\",\n        inputPessoa: \"\",\n        data: \"\",\n        local: \"\",\n        observacoes: \"\",\n        custo: \"\",\n        especialidade: \"\",\n        notNovaPessoaOrador: true\n      },\n      inputNovaPessoa: {\n        nome: \"\",\n        inputPessoa: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        dataNasc: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\"\n      },\n      allPersons: [],\n      allOrators: [],\n      allPersonsWithOrators: [],\n      buttonText: \"Novo Orador\",\n      buttonPessoaText: \"Adicionar Pessoa\"\n    };\n  },\n  methods: {\n    switchComponent(comp) {\n      bus.$emit(\"switchComp\", comp);\n    },\n    clearFields: function() {\n      (this.input.nome = \"\"),\n        (this.input.tipoEvento = \"\"),\n        (this.input.oradorRecorrente = \"true\"),\n        (this.input.inputOrador = \"\"),\n        (this.input.inputPessoa = \"\"),\n        (this.input.data = \"\"),\n        (this.input.local = \"\"),\n        (this.input.observacoes = \"\"),\n        (this.input.custo = \"\"),\n        (this.input.especialidade = \"\");\n        this.switchComponent('EventsTablesMenu');\n    },\n    toggleInsert: function() {\n      if (this.input.oradorRecorrente) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Novo Orador\";\n      }\n      this.input.oradorRecorrente = !this.input.oradorRecorrente;\n    },\n    togglePessoaInsert: function() {\n      if (this.input.notNovaPessoaOrador) {\n        this.buttonPessoaText = \"Cancelar\";\n      } else {\n        this.buttonPessoaText = \"Adicionar Pessoa\";\n      }\n      this.input.notNovaPessoaOrador = !this.input.notNovaPessoaOrador;\n    },\n    submit: function() {\n      //axios.post\n\n      //Eventos com orador: Palestras e Workshops\n      //Eventos com custo: Workshops\n\n      //verificar se o tipo de palestra está vazio:\n      if (this.input.tipoEvento === \"\") {\n        this.$toasted.error(\"Tipo de evento vazio!\");\n        return;\n      }\n      //verificar se há outros campos obrigatorios vazios\n      if (\n        this.input.nome === \"\" ||\n        this.input.oradorRecorrente === \"\" ||\n        this.input.data === \"\" ||\n        this.input.local === \"\"\n      ) {\n        this.$toasted.error(\"Campos obrigatorios vazios!\");\n        return;\n      }\n\n      //validar a existencia do ID escolhido de Pessoa (para prevenir inserções manuais incorrectas)\n\n      //verificar se orador é novo ou antigo, inserir orador novo na tabela.-\n      var oradorAux;\n      //se a palestra for uma palestra com orador\n      if (\n        this.input.tipoEvento === \"Palestra\" ||\n        this.input.tipoEvento === \"Workshop\"\n      ) {\n        //se for um orador novo\n        if (!this.input.oradorRecorrente) {\n          //se também for uma pessoa nova\n          if (!this.input.notNovaPessoaOrador) {\n            if (\n          this.inputNovaPessoa.nome == \"\" ||\n          this.inputNovaPessoa.nome == null ||\n          this.inputNovaPessoa.email == \"\" ||\n          this.inputNovaPessoa.email == null ||\n          this.inputNovaPessoa.telefone == \"\" ||\n          this.inputNovaPessoa.telefone == null ||\n          this.inputNovaPessoa.zona == \"\" ||\n          this.inputNovaPessoa.zona == null ||\n          this.inputNovaPessoa.genero == \"\" ||\n          this.inputNovaPessoa.genero == null ||\n          this.inputNovaPessoa.dataNasc == \"\" ||\n          this.inputNovaPessoa.dataNasc == null\n        ) {\n          this.$toasted.error(\"campos em falta!\");\n          return;\n        }\n\n        if(this.inputNovaPessoa.telefone.length != 9){\n          this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n          return;\n        }\n\n        if(!/^\\d+$/.test(this.inputNovaPessoa.telefone)){\n          this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n          return;\n        }\n\n        if(this.inputNovaPessoa.nif != \"\" && this.inputNovaPessoa.nif.length != 9){\n          this.$toasted.error(\"NIF de tamanho inválido!\");\n          return;\n        }\n\n        if(!/\\S+@\\S+\\.\\S+/.test(this.inputNovaPessoa.email)){\n          this.$toasted.error(\"Formato de email inválido!\");\n          return;\n        }\n\n            axios\n              .post(\n                \"api/postPessoa\",\n                {\n                  nome: this.inputNovaPessoa.nome,\n                  email: this.inputNovaPessoa.email,\n                  telefone: this.inputNovaPessoa.telefone,\n                  zona: this.inputNovaPessoa.zona,\n                  dataNasc: this.inputNovaPessoa.dataNasc,\n                  genero: this.inputNovaPessoa.genero,\n                  nif: this.inputNovaPessoa.nif,\n                  comoConheceu:\n                    this.inputNovaPessoa.comoConheceu === \"Local\"\n                      ? this.inputNovaPessoa.atravesDe\n                      : this.inputNovaPessoa.comoConheceu,\n                  atravesDe:\n                    this.inputNovaPessoa.comoConheceu === \"Local\"\n                      ? null\n                      : this.inputNovaPessoa.atravesDe\n                },\n                {\n                  withCredentials: true,\n                  headers: {\n                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                  }\n                }\n              )\n              .then(response => {\n                oradorAux = response.data;\n                //post na tabela de oradores\n                axios\n                  .post(\n                    \"api/postOrador\",\n                    {\n                      idOrador: oradorAux,\n                      especialidade: this.input.especialidade\n                    },\n                    {\n                      withCredentials: true,\n                      headers: {\n                        Authorization:\n                          `Bearer ` + sessionStorage.getItem(\"token\")\n                      }\n                    }\n                  )\n                  .then(response => {\n                    if (response.code === 201) {\n                      this.$toasted.error(\"Inserção de evento realizada com sucesso!\");\n                      this.switchComponent('EventsTablesMenu')\n                    }\n                    if(response.data == '1062'){\n                      this.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n                      return;\n                    }\n                  })\n                  .catch(error => {\n                    this.$toasted.error(\"Erro a inserir pessoa nos oradores\");\n\n                  });\n                //post Evento\n                axios\n                  .put(\n                    \"api/editEvento/\" + this.dadosEvento.idEvento,\n                    {\n                      idOrador: oradorAux,\n                      nomeEvento: this.input.nome,\n                      dataEvento: this.input.data,\n                      localEvento: this.input.local,\n                      tipoEvento: this.input.tipoEvento,\n                      observacoes: this.input.observacoes\n                    },\n                    {\n                      withCredentials: true,\n                      headers: {\n                        Authorization:\n                          `Bearer ` + sessionStorage.getItem(\"token\")\n                      }\n                    }\n                  )\n                  .then(response => {\n                    if (response.code === 201) {\n                      this.$toasted.error(\"Inserção de pessoa realizada com sucesso!\");\n                    }\n                    this.clearFields();\n                    this.switchComponent('EventsTablesMenu')\n                  })\n                  .catch(error => {\n                    this.$toasted.error(\"Erro na inserção de evento com nova pessoa!\");\n\n                  });\n              })\n              .catch(error => {\n                if(error.response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n              });\n            bus.$emit(\n              \"submitPart\",\n              \"Nova pessoa como orador inserida!\"\n            );\n            this.$forceUpdate();\n\n            return;\n          } else {\n            //se não for uma pessoa nova\n            //post orador\n            axios\n              .post(\n                \"/api/postOrador\",\n                {\n                  idOrador: this.input.inputPessoa,\n                  especialidade: this.input.especialidade\n                },\n                {\n                  withCredentials: true,\n                  headers: {\n                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                  }\n                }\n              )\n              .then(response => {})\n              .catch((errors) => {\n                if (errors.response.status === 400) {\n                  this.$toasted.error(\"Campos incorrectos ou incompletos!\");\n                }\n                if (errors.response.status === 401) {\n                  this.$toasted.error(\"Sessão expirou.\");\n                  bus.$emit(\"logout\");\n                }\n\n\n              });\n          }\n        } else {\n          //se for um orador já existente\n          if (\n            !this.allOrators.some(\n              item => item.idOrador == this.input.inputOrador\n            )\n          ) {\n            this.$toasted.error(\"ID de Orador introduzido inexistente ou vazio!\");\n            return;\n          } else {\n            oradorAux = this.input.inputOrador;\n          }\n        }\n      }\n\n      //---------------------------------------------------------------------------------------------------\n\n      //INSERÇÕES DE EVENTO\n      //Evento: idOrador, nome, data, local, tipoEvento, observacoes\n      switch (this.input.tipoEvento) {\n        case \"Palestra\":\n          axios\n            .put(\n              \"api/editEvento/\" + this.dadosEvento.idEvento,\n              {\n                idOrador: oradorAux,\n                nome: this.input.nome,\n                data: this.input.data,\n                local: this.input.local,\n                tipoEvento: this.input.tipoEvento,\n                observacoes: this.input.observacoes\n              },\n              {\n                withCredentials: true,\n                headers: {\n                  Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                }\n              }\n            )\n            .then(response => {\n              if (response.status === 201) {\n                this.$toasted.error(\"Evento\" + this.input.nome + \"Editado com sucesso!\");\n                this.clearFields();\n                this.switchComponent('EventsTablesMenu')\n              }\n            })\n            .catch(error => {\n              if(response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n              this.$toasted.error(\"Erro na inserção de evento!\");\n\n            });\n          break;\n\n        case \"Workshop\":\n\n          if(this.input.custo == \"\" || this.input.custo == null){\n            this.$toasted.error(\"Custo inválido!\");\n            return;\n          }\n          //inserir workshop e custo\n          axios\n            .put(\n              \"api/editEvento/\" + this.dadosEvento.idEvento,\n              {\n                idOrador: oradorAux,\n                nomeEvento: this.input.nome,\n                dataEvento: this.input.data,\n                localEvento: this.input.local,\n                tipoEvento: this.input.tipoEvento,\n                observacoes: this.input.observacoes\n              },\n              {\n                withCredentials: true,\n                headers: {\n                  Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                }\n              }\n            )\n            .then(response => {\n\n              if (response.status === 201) {\n                axios\n                  .put(\n                    \"api/editWorkshop/\" + this.dadosEvento.idEvento,\n                    {\n                      custo: this.input.custo\n                    },\n                    {\n                      withCredentials: true,\n                      headers: {\n                        Authorization:\n                          `Bearer ` + sessionStorage.getItem(\"token\")\n                      }\n                    }\n                  )\n                  .then(response => {\n                    if (response.status === 201) {\n                      this.$toasted.error(\"Workshop Editado!\");\n                      this.clearFields();\n                      this.switchComponent('EventsTablesMenu')\n                    }\n                  })\n                  .catch((errors) => {\n                    if (errors.response.status === 400) {\n                      this.$toasted.error(\"Campos incorrectos ou incompletos!\");\n                    }\n                    if (errors.response.status === 401) {\n                      this.$toasted.error(\"Sessão expirou.\");\n                      bus.$emit(\"logout\");\n                    }\n\n\n                  });\n              }\n            })\n            .catch((errors) => {\n              if (errors.response.status === 400) {\n                this.$toasted.error(\"Campos incorrectos ou incompletos!\");\n              }\n              if (errors.response.status === 401) {\n                this.$toasted.error(\"Sessão expirou.\");\n                bus.$emit(\"logout\");\n              }\n\n\n            });\n\n          break;\n\n        default:\n          //isto significa que é um evento sem orador, sem custo.\n          axios\n            .put(\n              \"api/editEvento/\" + this.dadosEvento.idEvento,\n              {\n                idOrador: null,\n                nome: this.input.nome,\n                data: this.input.data,\n                local: this.input.local,\n                tipoEvento: this.input.tipoEvento,\n                observacoes: this.input.observacoes\n              },\n              {\n                withCredentials: true,\n                headers: {\n                  Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                }\n              }\n            )\n            .then(response => {\n              if (response.status === 201) {\n                this.$toasted.error(\"Evento\" + this.input.nome + \" editado com sucesso!\");\n                this.clearFields();\n                this.switchComponent('EventsTablesMenu')\n              }\n            })\n            .catch(error => {\n              if(error.response.status === 401){\n            this.$toasted.error(\"Sessão expirou.\");\n            bus.$emit(\"logout\");\n            }\n            });\n          break;\n      }\n    }\n  },\n  components: {\n    ModelListSelect\n  }\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans\");\n@import url(\"https://www.w3schools.com/w3css/4/w3.css\");\n@import url(\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\");\n\nh1 {\n  text-align: center;\n  font-family: \"Open Sans\";\n}\n\n.voltarEvento button {\n  font-size: 20px;\n  margin-left: 25px;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  background-color: #eedec0;\n}\n.voltarEvento i {\n  font-size: 17px;\n  margin-right: 3px;\n}\n.voltarEvento button:hover {\n  background-color: #fdf5e6\n}\n\n.editarEvento {\n  font-family: \"Open Sans\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editarEvento .fields {\n  display: inline-grid;\n  grid-row-gap: 10px;\n  grid-column-gap: 50px;\n  background-color: oldlace;\n  width: 100%;\n}\n\n.editarEvento .fields .obrigatorio{\n  color: red;\n}\n\n.editarEvento .nomeEvento {\n  grid-column-start: 1;\n  margin-top: 10px;\n  margin-left: 115px;\n}\n\n.editarEvento .nomeEvento input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n\n.editarEvento .tipo {\n  margin-right: 115px;\n  margin-top: 10px;\n}\n.editarEvento .tipo select {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n\n.editarEvento .data {\n  margin-left: 115px;\n}\n.editarEvento .data input {\n  width: 100%;\n  height: 35px;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  border-radius: 4px;\n}\n\n.editarEvento .localEvento {\n  margin-right: 115px;\n}\n.editarEvento .localEvento input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n\n.editarEvento .observacoes {\n  margin-left: 115px;\n}\n.editarEvento .observacoes textarea {\n  width: 100%;\n  height: 150px;\n  box-sizing: border-box;\n  border: 1px solid #a1a0a0;\n  resize: none;\n  border-radius: 4px;\n}\n\n.editarEvento .custo {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 3;\n}\n.editarEvento .custo input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n\n.editarEvento .orador {\n  height: 15px;\n  margin-left: 115px;\n  width: 82%;\n  grid-row-start: 4;\n  grid-column-start: 1;\n  margin-bottom: 55px;\n}\n\n.editarEvento .botaoOradorExistente {\n  margin-right: 115px;\n  grid-row-start: 4;\n  grid-column-start: 2;\n  justify-self: end;\n  margin-top: 30px;\n}\n\n.editarEvento .botaoOradorExistente input {\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n}\n.editarEvento .botaoOradorExistente a {\n  border: 1px solid #a1a0a0;\n  height: 20px;\n}\n\n.editarEvento .novoOrador {\n  grid-row-start: 5;\n  margin-left: 115px;\n  display: contents;\n}\n\n.editarEvento .novoOrador .listaPessoas {\n  width: 82%;\n  grid-column-start: 1;\n  grid-row-start: 5;\n  margin-left: 115px;\n}\n\n.editarEvento .novoOrador .botaoPessoaExistente {\n  margin-right: 115px;\n  justify-self: end;\n  margin-top: 30px;\n  grid-column-start: 2;\n  grid-row-start: 5;\n}\n\n.editarEvento .novoOrador .botaoPessoaExistente input {\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n}\n.editarEvento .novoOrador .botaoPessoaExistente a {\n  border: 1px solid #a1a0a0;\n  height: 20px;\n}\n\n.editarEvento .novoOrador .nome {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 6;\n}\n.editarEvento .novoOrador .nome input {\n  width: 100%;\n  height: 35px;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  border-radius: 4px;\n}\n\n.editarEvento .novoOrador .email {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 6;\n}\n.editarEvento .novoOrador .email input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n.editarEvento .novoOrador .telefone {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 7;\n}\n.editarEvento .novoOrador .telefone input {\n  width: 100%;\n  height: 35px;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  border-radius: 4px;\n}\n\n.editarEvento .novoOrador .genero {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 7;\n}\n\n.editarEvento .novoOrador .zona {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 8;\n}\n.editarEvento .novoOrador .zona input {\n  width: 100%;\n  height: 35px;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  border-radius: 4px;\n}\n\n.editarEvento .novoOrador .idade {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 8;\n}\n.editarEvento .novoOrador .idade input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n\n.editarEvento .novoOrador .especialidade {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 9;\n}\n.editarEvento .novoOrador .especialidade input {\n  width: 100%;\n  height: 35px;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  border-radius: 4px;\n}\n.editarEvento .novoOrador .nif {\n  margin-right: 115px;\n  grid-column-start: 2;\n  grid-row-start: 9;\n}\n.editarEvento .novoOrador .nif input {\n  width: 100%;\n  border: 1px solid #a1a0a0;\n  padding-left: 3px;\n  height: 35px;\n  border-radius: 4px;\n}\n.editarEvento .novoOrador .comoConheceu {\n  margin-left: 115px;\n  grid-column-start: 1;\n  grid-row-start: 10;\n  width: 50%;\n  display: -webkit-box;\n  height: 35px;\n}\n\n.editarEvento .novoOrador .comoConheceu select {\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 30px;\n}\n\n.editarEvento .novoOrador .comoConheceu .atravesQuem {\n  margin-top: 11px;\n  width: 118%;\n  margin-left: 9px;\n}\n\n.editarEvento .novoOrador .comoConheceu .local {\n  margin-top: 16px;\n  width: 100%;\n  margin-left: 9px;\n}\n\n.editarEvento .novoOrador .comoConheceu .local input {\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  width: 122%;\n  height: 35px;\n}\n\n.editarEvento .registar {\n  margin-right: 115px;\n  margin-bottom: 30px;\n  grid-column-start: 2;\n  grid-row-start: 11;\n  align-self: end;\n  justify-self: end;\n}\n\n.editarEvento .registar button {\n  height: 50px;\n  font-size: medium;\n  cursor: pointer;\n  border: none;\n  background-color: #e99d72;\n  border-radius: 6px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: auto;\n}\n.editarEvento .registar button:hover {\n  background-color: #fab995;\n}\n</style>"],"sourceRoot":"src/components/edits"}]}