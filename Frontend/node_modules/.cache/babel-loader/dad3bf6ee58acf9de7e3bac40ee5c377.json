{"remainingRequest":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\registos\\FormAddPalestraSimposio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\registos\\FormAddPalestraSimposio.vue","mtime":1617391304491},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar axios = require(\"axios\");\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    bus.$emit(\"logout\");\n  }\n});\nimport { bus } from \"../../main.js\";\nimport { ModelListSelect } from \"vue-search-select\";\nexport default {\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(\"api/getAllPessoasNaoOradores\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allPersons = response.data;\n\n      if (errors.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    axios.get(\"api/getAllOradores\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allOrators = response.data;\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    axios.get(\"api/getAllPessoas\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      _this.allPersonsWithOrators = response.data;\n\n      if (errors.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n  },\n  props: {\n    idEvento: {\n      type: String,\n      required: true\n    },\n    dataEvento: {\n      required: true\n    },\n    localEvento: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    var here = this;\n    return {\n      input: {\n        nome: \"\",\n        tipoEvento: \"PalestraSimposio\",\n        inputPessoa: \"\",\n        inputOrador: \"\",\n        data: \"\",\n        local: this.localEvento,\n        observacoes: \"\",\n        especialidade: \"\",\n        oradorRecorrente: true,\n        notNovaPessoaOrador: true //False significa inserção nova pessoa como orador\n\n      },\n      inputNovaPessoa: {\n        nome: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\",\n        dataNasc: \"\"\n      },\n      buttonText: \"Novo Orador\",\n      buttonPessoaText: \"Adicionar Pessoa\",\n      allPersons: [],\n      allOrators: [],\n      allPersonsWithOrators: []\n    };\n  },\n  methods: {\n    clearFields: function clearFields() {\n      this.input.nome = \"\", this.input.oradorRecorrente = \"true\", this.input.notNovaPessoaOrador = \"true\", this.input.inputOrador = \"\", this.input.inputPessoa = \"\", this.input.data = \"\", this.input.local = \"\", this.input.observacoes = \"\", this.input.especialidade = \"\", this.inputNovaPessoa.nome = \"\", this.inputNovaPessoa.email = \"\", this.inputNovaPessoa.genero = \"\", this.inputNovaPessoa.telefone = \"\", this.inputNovaPessoa.zona = \"\", this.inputNovaPessoa.nif = \"\", this.inputNovaPessoa.comoConheceu = \"\", this.inputNovaPessoa.atravesDe = \"\";\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      var oradorAux;\n      var eventoAux; //verificar se há outros campos obrigatorios vazios\n\n      if (this.input.nome === \"\" || this.input.oradorRecorrente === \"\" || this.input.data === \"\" || this.input.local === \"\") {\n        this.$toasted.error(\"Campos obrigatorios vazios!\");\n        return;\n      }\n\n      var dataPalestraAux = new Date(this.input.data);\n      dataPalestraAux.setHours(0);\n      dataPalestraAux.setMinutes(0);\n      var dataEventoAux = new Date(this.dataEvento);\n      dataEventoAux.setHours(0);\n      dataEventoAux.setMinutes(0);\n\n      if (dataPalestraAux.getTime() != dataEventoAux.getTime()) {\n        this.$toasted.error(\"Uma palestra tem de ocorrer no mesmo dia do Simpósio!\");\n        return;\n      } //INSERÇÕES DE EVENTO\n      //tratar do orador\n\n\n      if (this.input.oradorRecorrente) {\n        oradorAux = this.input.inputOrador;\n\n        if (oradorAux == \"\" || oradorAux == null) {\n          this.$toasted.error(\"Selecionar ou inserir orador!!\");\n          return;\n        }\n      } else if (!this.input.notNovaPessoaOrador) {\n        //inserir nova pessoa, oradorAux é o ID do insert\n        if (this.inputNovaPessoa.nome == \"\" || this.inputNovaPessoa.nome == null || this.inputNovaPessoa.email == \"\" || this.inputNovaPessoa.email == null || this.inputNovaPessoa.telefone == \"\" || this.inputNovaPessoa.telefone == null || this.inputNovaPessoa.zona == \"\" || this.inputNovaPessoa.zona == null || this.inputNovaPessoa.genero == \"\" || this.inputNovaPessoa.genero == null || this.inputNovaPessoa.dataNasc == \"\" || this.inputNovaPessoa.dataNasc == null) {\n          this.$toasted.error(\"campos em falta!\");\n          return;\n        }\n\n        if (this.inputNovaPessoa.telefone.length != 9) {\n          this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n          return;\n        }\n\n        if (!/^\\d+$/.test(this.inputNovaPessoa.telefone)) {\n          this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n          return;\n        }\n\n        if (this.inputNovaPessoa.nif != \"\" && this.inputNovaPessoa.nif.length != 9) {\n          this.$toasted.error(\"NIF de tamanho inválido!\");\n          return;\n        }\n\n        if (/\\S+@\\S+\\.\\S+/.test(this.inputNovaPessoa.email)) {\n          this.$toasted.error(\"Formato de email inválido!\");\n          return;\n        }\n\n        if (this.inputNovaPessoa.comoConheceu.valueOf() != \"Local\".valueOf() && (this.inputNovaPessoa.atravesDe == null || this.inputNovaPessoa.atravesDe == \"\")) {\n          this.$toasted.error(\"Obrigatório selecionar pessoa por onde conheceu!\");\n          return;\n        }\n\n        axios.post(\"api/postPessoa\", {\n          nome: this.inputNovaPessoa.nome,\n          email: this.inputNovaPessoa.email,\n          telefone: this.inputNovaPessoa.telefone,\n          zona: this.inputNovaPessoa.zona,\n          dataNasc: this.inputNovaPessoa.dataNasc,\n          genero: this.inputNovaPessoa.genero,\n          nif: this.inputNovaPessoa.nif,\n          comoConheceu: this.inputNovaPessoa.comoConheceu === \"Local\" ? this.inputNovaPessoa.atravesDe : this.inputNovaPessoa.comoConheceu,\n          atravesDe: this.inputNovaPessoa.comoConheceu === \"Local\" ? null : this.inputNovaPessoa.atravesDe\n        }, {\n          withCredentials: true,\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n          }\n        }).then(function (response) {\n          if (response.data == '1062') {\n            _this2.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n\n            return;\n          }\n\n          oradorAux = response.data; //post na tabela de oradores\n\n          axios.post(\"api/postOrador\", {\n            idOrador: oradorAux,\n            especialidade: _this2.input.especialidade\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function (response) {\n            if (response.status === 201) {\n              _this2.$toasted.error(\"Inserção de orador realizada com sucesso!\");\n            }\n          }).catch(function (error) {\n            if (error.response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n\n            _this2.$toasted.error(\"Erro a inserir pessoa nos oradores\");\n          }); //post Evento\n\n          axios.post(\"api/postEvento\", {\n            idOrador: oradorAux,\n            nome: _this2.input.nome,\n            data: _this2.input.data,\n            local: _this2.input.local,\n            tipoEvento: _this2.input.tipoEvento,\n            observacoes: _this2.input.observacoes\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function (response) {\n            if (response.status === 201) {\n              _this2.$toasted.error(\"Inserção de Evento realizada com sucesso!\");\n            } //obter SELECT ID e colocar na tabela de relacionamento\n\n\n            eventoAux = response.data;\n            axios.post(\"api/postPalestraSimposio\", {\n              idPalestra: eventoAux,\n              idSimposio: _this2.idEvento\n            }, {\n              withCredentials: true,\n              headers: {\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n              }\n            }).then(function (response) {\n              if (response.status === 201) {\n                bus.$emit(\"submitPart\", \"Nova palestra com nova pessoa como orador inserida!\");\n\n                _this2.$forceUpdate();\n\n                return;\n              }\n            }).catch();\n\n            _this2.clearFields();\n\n            return;\n          }).catch(function (error) {\n            if (error.response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n\n            _this2.$toasted.error(\"Erro na inserção de evento com nova pessoa!\");\n          });\n        }).catch(function (error) {});\n        return;\n      } else {\n        oradorAux = this.input.inputPessoa;\n      }\n\n      if (this.inputNovaPessoa) {\n        axios.post(\"api/postEvento\", {\n          idOrador: oradorAux,\n          nome: this.input.nome,\n          data: this.input.data,\n          local: this.input.local,\n          tipoEvento: this.input.tipoEvento,\n          observacoes: this.input.observacoes\n        }, {\n          withCredentials: true,\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n          }\n        }).then(function (response) {\n          if (response.status === 401) {\n            _this2.$toasted.error(\"Sessão expirou.\");\n\n            bus.$emit(\"logout\");\n          } //obter SELECT ID e colocar na tabela de relacionamento\n\n\n          eventoAux = response.data;\n          axios.post(\"api/postPalestraSimposio\", {\n            idPalestra: eventoAux,\n            idSimposio: _this2.idEvento\n          }, {\n            withCredentials: true,\n            headers: {\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n          }).then(function () {\n            bus.$emit(\"submitPart\", \"Nova palestra inserida!\");\n            return;\n          }).catch(function (error) {\n            if (error.response.status === 401) {\n              _this2.$toasted.error(\"Sessão expirou.\");\n\n              bus.$emit(\"logout\");\n            }\n          });\n        }).catch(function (error) {\n          if (error.response.status === 401) {\n            _this2.$toasted.error(\"Sessão expirou.\");\n\n            bus.$emit(\"logout\");\n          }\n\n          _this2.$toasted.error(\"Erro na inserção de evento!\");\n        });\n      }\n    },\n    toggleInsert: function toggleInsert() {\n      if (this.input.oradorRecorrente) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Novo Orador\";\n      }\n\n      this.input.oradorRecorrente = !this.input.oradorRecorrente;\n    },\n    togglePessoaInsert: function togglePessoaInsert() {\n      if (this.input.notNovaPessoaOrador) {\n        this.buttonPessoaText = \"Cancelar\";\n      } else {\n        this.buttonPessoaText = \"Adicionar Pessoa\";\n      }\n\n      this.input.notNovaPessoaOrador = !this.input.notNovaPessoaOrador;\n    }\n  },\n  components: {\n    ModelListSelect: ModelListSelect\n  }\n};",{"version":3,"sources":["FormAddPalestraSimposio.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"adicionarPalestraSimposio\">\n    <br>\n    <div class=\"form\">\n      <div class=\"nome\">\n        <label>\n          Nome:\n          <i class=\"obrigatorio\">*</i>\n        </label>\n        <br>\n        <input type=\"text\" v-model=\"input.nome\" name=\"nome\">\n      </div>\n      <div class=\"data\">\n        <label>\n          Data:\n          <i class=\"obrigatorio\">*</i>\n        </label>\n        <br>\n        <input type=\"datetime-local\" v-model=\"input.data\" name=\"data\">\n      </div>\n      <!--\n        <div class=\"oradorExistente\">\n            <label>Orador já existente?</label>\n            <br>\n            <input\n              type=\"radio\"\n              v-model=\"input.oradorRecorrente\"\n              name=\"oradorRecorrente\"\n              v-bind:value=\"true\"\n            > Sim\n            <br>\n            <input\n              type=\"radio\"\n              v-model=\"input.oradorRecorrente\"\n              name=\"oradorRecorrente\"\n              v-bind:value=\"false\"\n            > Não\n            <br>\n          </div>\n      -->\n\n      <div class=\"botaoOradorExistente\">\n        <a class=\"fas fa-user-plus\">\n          <input type=\"button\" v-model=\"buttonText\" v-on:click=\"toggleInsert()\">\n        </a>\n\n        <br>\n      </div>\n\n      <template v-if=\"input.oradorRecorrente\">\n        <div class=\"orador\">\n          <label>\n            Orador:\n            <i class=\"obrigatorio\">*</i>\n          </label>\n          <br>\n          <!--\n              <input name=\"inputOrador\" v-model=\"input.inputOrador\" list=\"listaOrador\" key=\"orador-rec\">\n              <datalist id=\"listaOrador\">\n                <option\n                  v-for=\"(orador, key) in allOrators\"\n                  :key=\"key\"\n                >{{orador.idOrador}}: {{orador.nome}}</option>\n              </datalist>\n          -->\n          <model-list-select\n            :list=\"allOrators\"\n            v-model=\"input.inputOrador\"\n            option-value=\"idOrador\"\n            option-text=\"nome\"\n            placeholder=\"Escolher\"\n          ></model-list-select>\n        </div>\n      </template>\n\n      <template v-else>\n        <div class=\"novoOrador\">\n          <div class=\"botaoPessoaExistente\">\n            <a class=\"fas fa-user-plus\">\n              <input type=\"button\" v-model=\"buttonPessoaText\" v-on:click=\"togglePessoaInsert()\">\n            </a>\n          </div>\n          <template v-if=\"input.notNovaPessoaOrador\">\n            <div class=\"listaPessoas\">\n              <label>\n                Novo Orador:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n\n              <!--\n                    <input name=\"inputPessoa\" v-model=\"input.inputPessoa\" list=\"listaPessoa\" key=\"orador-new\">\n                    <datalist id=\"listaPessoa\">\n                      <option\n                        v-for=\"(pessoa, key) in allPersons\"\n                        :key=\"key\"\n                      >{{pessoa.idPessoa}}: {{pessoa.nome}}</option>\n                    </datalist>\n              -->\n              <model-list-select\n                :list=\"allPersons\"\n                v-model=\"input.inputPessoa\"\n                option-value=\"idPessoa\"\n                option-text=\"nome\"\n                placeholder=\"Escolher\"\n              ></model-list-select>\n            </div>\n          </template>\n          <!-- terceira opção ->inserir nova pessoa -->\n          <template v-else>\n            <div class=\"nomeOrador\">\n              <label>\n                Nome:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"text\" v-model=\"inputNovaPessoa.nome\" name=\"nome\">\n            </div>\n            <div class=\"email\">\n              <label>\n                Email:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"text\" v-model=\"inputNovaPessoa.email\" name=\"email\">\n            </div>\n            <div class=\"telefone\">\n              <label>\n                Telefone:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"text\" v-model=\"inputNovaPessoa.telefone\" name=\"telefone\">\n            </div>\n            <div class=\"genero\">\n              <label>\n                Género:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"radio\" v-model=\"inputNovaPessoa.genero\" name=\"m\" value=\"M\"> M\n              <br>\n              <input type=\"radio\" v-model=\"inputNovaPessoa.genero\" name=\"f\" value=\"F\"> F\n              <br>\n            </div>\n            <div class=\"zona\">\n              <label>\n                Zona:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"text\" v-model=\"inputNovaPessoa.zona\" name=\"zona\">\n            </div>\n            <div class=\"idade\">\n              <label>\n                Data de Nascimento:\n                <i class=\"obrigatorio\">*</i>\n              </label>\n              <br>\n              <input type=\"date\" v-model=\"inputNovaPessoa.dataNasc\" name=\"idade\">\n            </div>\n            <div class=\"nif\">\n              <label>NIF:</label>\n              <br>\n              <input type=\"text\" v-model=\"inputNovaPessoa.nif\" name=\"nif\">\n            </div>\n            <div class=\"comoConheceu\">\n              <label>Como Conheceu:</label>\n              <br>\n              <select v-model=\"inputNovaPessoa.comoConheceu\">\n                <option>Pessoa</option>\n                <option value=\"Local\">Folheto em Local</option>\n                <option>Redes Sociais</option>\n                <option>E-Mail</option>\n              </select>\n              <template\n                v-if=\"inputNovaPessoa.comoConheceu === 'Pessoa' || inputNovaPessoa.comoConheceu === 'Redes Sociais' || inputNovaPessoa.comoConheceu === 'E-Mail'\"\n              >\n                <div class=\"atravesQuem\">\n                  <model-list-select\n                    :list=\"allPersonsWithOrators\"\n                    v-model=\"inputNovaPessoa.atravesDe\"\n                    option-value=\"idPessoa\"\n                    option-text=\"nome\"\n                    placeholder=\"Escolher\"\n                  ></model-list-select>\n                </div>\n              </template>\n              <template v-else-if=\"inputNovaPessoa.comoConheceu === 'Local'\">\n                <!-- conheceu através de um folheto num local -->\n                <div class=\"local\">\n                  <!--<label>Local:</label>\n                  <br>-->\n                  <input\n                    type=\"text\"\n                    v-model=\"inputNovaPessoa.atravesDe\"\n                    name=\"local\"\n                    placeholder=\"Local\"\n                  >\n                </div>\n              </template>\n            </div>\n          </template>\n          <div class=\"especialidade\">\n            <label>\n              Especialidade:\n              <i class=\"obrigatorio\">*</i>\n            </label>\n            <br>\n            <input name=\"inputEspecialidade\" v-model=\"input.especialidade\">\n          </div>\n        </div>\n      </template>\n\n      <div class=\"observacoes\">\n        <label>Observações:</label>\n        <br>\n        <textarea type=\"text\" v-model=\"input.observacoes\" name=\"observacoes\"></textarea>\n      </div>\n      <div class=\"registar\">\n        <button type=\"submit\" v-on:click.prevent=\"submit()\">\n          <i class=\"far fa-save\"></i> Registar\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nvar axios = require(\"axios\");\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response.status === 401) {\n      bus.$emit(\"logout\");\n    }\n  }\n);\n\nimport { bus } from \"../../main.js\";\nimport { ModelListSelect } from \"vue-search-select\";\nexport default {\n  mounted() {\n    axios\n      .get(\"api/getAllPessoasNaoOradores\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allPersons = response.data;\n        if (errors.response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n      })\n      .catch(error => {\n        if (error.response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n      });\n\n    axios\n      .get(\"api/getAllOradores\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allOrators = response.data;\n      })\n      .catch(error => {\n        if (error.response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n      });\n\n    axios\n      .get(\"api/getAllPessoas\", {\n        withCredentials: true,\n        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n      })\n      .then(response => {\n        this.allPersonsWithOrators = response.data;\n        if (errors.response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n      })\n      .catch(error => {\n        if (error.response.status === 401) {\n          this.$toasted.error(\"Sessão expirou.\");\n          bus.$emit(\"logout\");\n        }\n      });\n  },\n  props: {\n    idEvento: {\n      type: String,\n      required: true\n    },\n    dataEvento: {\n      required: true\n    },\n    localEvento: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    var here = this;\n    return {\n      input: {\n        nome: \"\",\n        tipoEvento: \"PalestraSimposio\",\n        inputPessoa: \"\",\n        inputOrador: \"\",\n        data: \"\",\n        local: this.localEvento,\n        observacoes: \"\",\n        especialidade: \"\",\n        oradorRecorrente: true,\n        notNovaPessoaOrador: true\n        //False significa inserção nova pessoa como orador\n      },\n      inputNovaPessoa: {\n        nome: \"\",\n        email: \"\",\n        genero: \"\",\n        telefone: \"\",\n        zona: \"\",\n        nif: \"\",\n        comoConheceu: \"Pessoa\",\n        atravesDe: \"\",\n        dataNasc: \"\"\n      },\n      buttonText: \"Novo Orador\",\n      buttonPessoaText: \"Adicionar Pessoa\",\n      allPersons: [],\n      allOrators: [],\n      allPersonsWithOrators: []\n    };\n  },\n  methods: {\n    clearFields: function() {\n      (this.input.nome = \"\"),\n        (this.input.oradorRecorrente = \"true\"),\n        (this.input.notNovaPessoaOrador = \"true\"),\n        (this.input.inputOrador = \"\"),\n        (this.input.inputPessoa = \"\"),\n        (this.input.data = \"\"),\n        (this.input.local = \"\"),\n        (this.input.observacoes = \"\"),\n        (this.input.especialidade = \"\"),\n        (this.inputNovaPessoa.nome = \"\"),\n        (this.inputNovaPessoa.email = \"\"),\n        (this.inputNovaPessoa.genero = \"\"),\n        (this.inputNovaPessoa.telefone = \"\"),\n        (this.inputNovaPessoa.zona = \"\"),\n        (this.inputNovaPessoa.nif = \"\"),\n        (this.inputNovaPessoa.comoConheceu = \"\"),\n        (this.inputNovaPessoa.atravesDe = \"\");\n    },\n    submit: function() {\n      var oradorAux;\n      var eventoAux;\n      //verificar se há outros campos obrigatorios vazios\n      if (\n        this.input.nome === \"\" ||\n        this.input.oradorRecorrente === \"\" ||\n        this.input.data === \"\" ||\n        this.input.local === \"\"\n      ) {\n        this.$toasted.error(\"Campos obrigatorios vazios!\");\n        return;\n      }\n\n      var dataPalestraAux = new Date(this.input.data);\n      dataPalestraAux.setHours(0);\n      dataPalestraAux.setMinutes(0);\n      var dataEventoAux = new Date(this.dataEvento);\n      dataEventoAux.setHours(0);\n      dataEventoAux.setMinutes(0);\n      if (dataPalestraAux.getTime() != dataEventoAux.getTime()) {\n        this.$toasted.error(\"Uma palestra tem de ocorrer no mesmo dia do Simpósio!\");\n        return;\n      }\n\n      //INSERÇÕES DE EVENTO\n\n      //tratar do orador\n      if (this.input.oradorRecorrente) {\n        oradorAux = this.input.inputOrador;\n        if(oradorAux == \"\" || oradorAux == null){\n          this.$toasted.error(\"Selecionar ou inserir orador!!\");\n          return;\n        }\n      } else if (!this.input.notNovaPessoaOrador) {\n        //inserir nova pessoa, oradorAux é o ID do insert\n         if (\n          this.inputNovaPessoa.nome == \"\" ||\n          this.inputNovaPessoa.nome == null ||\n          this.inputNovaPessoa.email == \"\" ||\n          this.inputNovaPessoa.email == null ||\n          this.inputNovaPessoa.telefone == \"\" ||\n          this.inputNovaPessoa.telefone == null ||\n          this.inputNovaPessoa.zona == \"\" ||\n          this.inputNovaPessoa.zona == null ||\n          this.inputNovaPessoa.genero == \"\" ||\n          this.inputNovaPessoa.genero == null ||\n          this.inputNovaPessoa.dataNasc == \"\" ||\n          this.inputNovaPessoa.dataNasc == null\n        ) {\n          this.$toasted.error(\"campos em falta!\");\n          return;\n        }\n\n        if(this.inputNovaPessoa.telefone.length != 9){\n          this.$toasted.error(\"Número de telefone de tamanho inválido!\");\n          return;\n        }\n\n        if(!/^\\d+$/.test(this.inputNovaPessoa.telefone)){\n          this.$toasted.error(\"caracteres inválidos no número de telefone!\");\n          return;\n        }\n\n        if(this.inputNovaPessoa.nif != \"\" && this.inputNovaPessoa.nif.length != 9){\n          this.$toasted.error(\"NIF de tamanho inválido!\");\n          return;\n        }\n\n        if(/\\S+@\\S+\\.\\S+/.test(this.inputNovaPessoa.email)){\n          this.$toasted.error(\"Formato de email inválido!\");\n          return;\n        }\n\n        \n\n        if(this.inputNovaPessoa.comoConheceu.valueOf() != \"Local\".valueOf() && (this.inputNovaPessoa.atravesDe == null || this.inputNovaPessoa.atravesDe == \"\")){\n          this.$toasted.error(\"Obrigatório selecionar pessoa por onde conheceu!\");\n          return;\n        }\n\n        axios\n          .post(\n            \"api/postPessoa\",\n            {\n              nome: this.inputNovaPessoa.nome,\n              email: this.inputNovaPessoa.email,\n              telefone: this.inputNovaPessoa.telefone,\n              zona: this.inputNovaPessoa.zona,\n              dataNasc: this.inputNovaPessoa.dataNasc,\n              genero: this.inputNovaPessoa.genero,\n              nif: this.inputNovaPessoa.nif,\n              comoConheceu:\n                this.inputNovaPessoa.comoConheceu === \"Local\"\n                  ? this.inputNovaPessoa.atravesDe\n                  : this.inputNovaPessoa.comoConheceu,\n              atravesDe:\n                this.inputNovaPessoa.comoConheceu === \"Local\"\n                  ? null\n                  : this.inputNovaPessoa.atravesDe\n            },\n            {\n              withCredentials: true,\n              headers: {\n                Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n              }\n            }\n          )\n          .then(response => {\n            if(response.data == '1062'){\n                    this.$toasted.error(\"NIF ou email já existentes! Possível pessoa duplicada!\");\n                    return;\n            }\n            oradorAux = response.data;\n            //post na tabela de oradores\n            axios\n              .post(\n                \"api/postOrador\",\n                {\n                  idOrador: oradorAux,\n                  especialidade: this.input.especialidade\n                },\n                {\n                  withCredentials: true,\n                  headers: {\n                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                  }\n                }\n              )\n              .then(response => {\n                if (response.status === 201) {\n                  this.$toasted.error(\"Inserção de orador realizada com sucesso!\");\n                }\n                \n              })\n              .catch(error => {\n                if (error.response.status === 401) {\n                  this.$toasted.error(\"Sessão expirou.\");\n                  bus.$emit(\"logout\");\n                }\n                this.$toasted.error(\"Erro a inserir pessoa nos oradores\");\n\n              });\n            //post Evento\n            axios\n              .post(\n                \"api/postEvento\",\n                {\n                  idOrador: oradorAux,\n                  nome: this.input.nome,\n                  data: this.input.data,\n                  local: this.input.local,\n                  tipoEvento: this.input.tipoEvento,\n                  observacoes: this.input.observacoes\n                },\n                {\n                  withCredentials: true,\n                  headers: {\n                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                  }\n                }\n              )\n              .then(response => {\n                if (response.status === 201) {\n                  this.$toasted.error(\"Inserção de Evento realizada com sucesso!\");\n                }\n                //obter SELECT ID e colocar na tabela de relacionamento\n                eventoAux = response.data;\n                axios\n                  .post(\n                    \"api/postPalestraSimposio\",\n                    {\n                      idPalestra: eventoAux,\n                      idSimposio: this.idEvento\n                    },\n                    {\n                      withCredentials: true,\n                      headers: {\n                        Authorization:\n                          `Bearer ` + sessionStorage.getItem(\"token\")\n                      }\n                    }\n                  )\n                  .then(response => {\n                    if (response.status === 201) {\n                      bus.$emit(\n                        \"submitPart\",\n                        \"Nova palestra com nova pessoa como orador inserida!\"\n                      );\n                      this.$forceUpdate();\n                      return;\n                    }\n                  })\n                  .catch();\n\n                this.clearFields();\n                return;\n              })\n              .catch(error => {\n                if (error.response.status === 401) {\n                  this.$toasted.error(\"Sessão expirou.\");\n                  bus.$emit(\"logout\");\n                }\n                this.$toasted.error(\"Erro na inserção de evento com nova pessoa!\");\n\n              });\n          })\n          .catch(error => {\n\n          });\n          return;\n      } else {\n        oradorAux = this.input.inputPessoa;\n      }\n\n      if (this.inputNovaPessoa) {\n        axios\n          .post(\n            \"api/postEvento\",\n            {\n              idOrador: oradorAux,\n              nome: this.input.nome,\n              data: this.input.data,\n              local: this.input.local,\n              tipoEvento: this.input.tipoEvento,\n              observacoes: this.input.observacoes\n            },\n            {\n              withCredentials: true,\n              headers: {\n                Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n              }\n            }\n          )\n          .then(response => {\n            if (response.status === 401) {\n              this.$toasted.error(\"Sessão expirou.\");\n              bus.$emit(\"logout\");\n            }\n            //obter SELECT ID e colocar na tabela de relacionamento\n            eventoAux = response.data;\n            axios\n              .post(\n                \"api/postPalestraSimposio\",\n                {\n                  idPalestra: eventoAux,\n                  idSimposio: this.idEvento\n                },\n                {\n                  withCredentials: true,\n                  headers: {\n                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                  }\n                }\n              )\n              .then(() => {\n                bus.$emit(\"submitPart\", \"Nova palestra inserida!\");\n                return;\n              })\n              .catch(error => {\n                if (error.response.status === 401) {\n                  this.$toasted.error(\"Sessão expirou.\");\n                  bus.$emit(\"logout\");\n                }\n              });\n          })\n          .catch(error => {\n            if (error.response.status === 401) {\n              this.$toasted.error(\"Sessão expirou.\");\n              bus.$emit(\"logout\");\n            }\n            this.$toasted.error(\"Erro na inserção de evento!\");\n\n          });\n      }\n    },\n    toggleInsert: function() {\n      if (this.input.oradorRecorrente) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Novo Orador\";\n      }\n      this.input.oradorRecorrente = !this.input.oradorRecorrente;\n    },\n    togglePessoaInsert: function() {\n      if (this.input.notNovaPessoaOrador) {\n        this.buttonPessoaText = \"Cancelar\";\n      } else {\n        this.buttonPessoaText = \"Adicionar Pessoa\";\n      }\n      this.input.notNovaPessoaOrador = !this.input.notNovaPessoaOrador;\n    }\n  },\n  components: {\n    ModelListSelect\n  }\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans\");\n@import url(\"https://www.w3schools.com/w3css/4/w3.css\");\n\nh1 {\n  text-align: center;\n  font-family: \"Open Sans\";\n}\n\n.adicionarPalestraSimposio {\n  font-family: \"Open Sans\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.adicionarPalestraSimposio .form {\n  display: inline-grid;\n  grid-row-gap: 10px;\n  grid-column-gap: 15px;\n  background-color: oldlace;\n  width: 100%;\n}\n\n.adicionarPalestraSimposio .form .obrigatorio {\n  color: red;\n}\n\n.adicionarPalestraSimposio .nome {\n  grid-column-start: 1;\n  grid-row-start: 1;\n  margin-top: 15px;\n  margin-left: 192px;\n}\n.adicionarPalestraSimposio .nome input {\n  width: 80%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n.adicionarPalestraSimposio .data {\n  grid-column-start: 2;\n  margin-top: 15px;\n}\n\n.adicionarPalestraSimposio .data input {\n  width: 70%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .observacoes {\n  grid-column-start: 1;\n  grid-row-start: 2;\n  margin-left: 192px;\n}\n.adicionarPalestraSimposio .observacoes textarea {\n  width: 80%;\n  height: 150px;\n  box-sizing: border-box;\n  border: 1px solid #a1a0a0;\n  resize: none;\n  border-radius: 4px;\n}\n\n.adicionarPalestraSimposio .orador {\n  height: 15px;\n  width: 48%;\n  grid-row-start: 2;\n  grid-column-start: 2;\n}\n\n.adicionarPalestraSimposio .botaoOradorExistente {\n  grid-row-start: 2;\n  grid-column-start: 2;\n  justify-self: center;\n  margin-top: 30px;\n  margin-left: 105px;\n}\n\n.adicionarPalestraSimposio .botaoOradorExistente input {\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n}\n.adicionarPalestraSimposio .botaoOradorExistente a {\n  border: 1px solid #a1a0a0;\n  height: 20px;\n}\n\n.adicionarPalestraSimposio .novoOrador .listaPessoas {\n  width: 58%;\n  grid-column-start: 1;\n  grid-row-start: 3;\n  margin-left: 192px;\n}\n\n.adicionarPalestraSimposio .novoOrador .botaoPessoaExistente {\n  margin-top: 30px;\n  grid-column-start: 2;\n  grid-row-start: 3;\n  justify-self: center;\n  margin-left: 55px;\n}\n\n.adicionarPalestraSimposio .novoOrador .botaoPessoaExistente input {\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n}\n.adicionarPalestraSimposio .novoOrador .botaoPessoaExistente a {\n  border: 1px solid #a1a0a0;\n  height: 20px;\n}\n\n.adicionarPalestraSimposio .novoOrador {\n  grid-row-start: 4;\n  display: contents;\n}\n.adicionarPalestraSimposio .novoOrador .nomeOrador {\n  grid-column-start: 1;\n  grid-row-start: 4;\n  margin-left: 192px;\n}\n\n.adicionarPalestraSimposio .novoOrador .nomeOrador input {\n  width: 80%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .email {\n  grid-column-start: 2;\n  grid-row-start: 4;\n}\n\n.adicionarPalestraSimposio .novoOrador .email input {\n  width: 70%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .telefone {\n  grid-column-start: 2;\n  grid-row-start: 5;\n}\n\n.adicionarPalestraSimposio .novoOrador .telefone input {\n  width: 70%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .genero {\n  grid-column-start: 1;\n  grid-row-start: 6;\n  margin-left: 192px;\n}\n\n.adicionarPalestraSimposio .novoOrador .zona {\n  grid-column-start: 2;\n  grid-row-start: 6;\n}\n\n.adicionarPalestraSimposio .novoOrador .zona input {\n  width: 70%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .idade {\n  grid-column-start: 1;\n  grid-row-start: 5;\n  margin-left: 192px;\n}\n\n.adicionarPalestraSimposio .novoOrador .idade input {\n  width: 80%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .nif {\n  grid-column-start: 2;\n  grid-row-start: 7;\n}\n\n.adicionarPalestraSimposio .novoOrador .nif input {\n  width: 70%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .especialidade {\n  grid-column-start: 1;\n  grid-row-start: 7;\n  margin-left: 192px;\n}\n\n.adicionarPalestraSimposio .novoOrador .especialidade input {\n  width: 80%;\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .novoOrador .comoConheceu {\n  grid-column-start: 1;\n  grid-row-start: 8;\n  margin-left: 192px;\n  width: 39%;\n  margin-bottom: 15px;\n  display: -webkit-box;\n}\n\n.adicionarPalestraSimposio .novoOrador .comoConheceu select {\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  height: 30px;\n}\n\n.adicionarPalestraSimposio .novoOrador .comoConheceu .atravesQuem {\n  margin-top: 15px;\n  width: 98%;\n  margin-left: 9px;\n}\n\n.adicionarPalestraSimposio .novoOrador .comoConheceu .local {\n  margin-top: 22px;\n  width: 100%;\n  margin-left: 9px;\n}\n\n.adicionarPalestraSimposio .novoOrador .comoConheceu .local input {\n  border: 1px solid #a1a0a0;\n  border-radius: 4px;\n  width: 103%;\n  height: 35px;\n}\n\n.adicionarPalestraSimposio .registar {\n  margin-left: 192px;\n  margin-bottom: 30px;\n  grid-column-start: 1;\n  grid-row-start: 9;\n}\n\n.adicionarPalestraSimposio .registar button {\n  height: 50px;\n  font-size: medium;\n  cursor: pointer;\n  border: none;\n  background-color: #e99d72;\n  border-radius: 6px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: auto;\n}\n.adicionarPalestraSimposio .registar button:hover {\n  background-color: #fab995;\n}\n</style>"],"sourceRoot":"src/components/registos"}]}