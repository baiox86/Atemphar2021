{"remainingRequest":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\registos\\RegistarPresencasPalestra.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\src\\components\\registos\\RegistarPresencasPalestra.vue","mtime":1617391304772},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projeto Final\\Entrega\\Software\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.string.starts-with\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar axios = require(\"axios\");\n\nvar instance = axios.create({\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    bus.$emit(\"logout\");\n  }\n});\nimport { bus } from \"../../main.js\";\nimport { ModelListSelect } from \"vue-search-select\";\nexport default {\n  name: 'RegistarPresencasPalestra',\n  data: function data() {\n    var here = this;\n    return {\n      input: {\n        palestra: null,\n        pessoa: null,\n        primeiroEvento: false\n      },\n      i: 0,\n      desativarEvento: false,\n      pessoa: null,\n      allPessoa: [],\n      allPalestra: [],\n      registoPessoas: [],\n      eventoText: \"Procurar por nome, data ou local\",\n      buttonText: \"Adicionar Pessoa\",\n      registarPresencaText: \"Registar Presença\",\n      registarPessoaText: \"Registar Pessoa\",\n      registarPessoa: false\n    };\n  },\n  watch: {\n    registarPessoa: function registarPessoa() {\n      var _this = this;\n\n      axios.get(\"api/getAllPessoasIdNome\", {\n        withCredentials: true,\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          _this.$toasted.error(\"Sessão expirou.\");\n\n          bus.$emit(\"logout\");\n        }\n\n        _this.allPessoa = response.data;\n      }).catch(function (error) {\n        if (error.response.status === 401) {\n          _this.$toasted.error(\"Sessão expirou.\");\n\n          bus.$emit(\"logout\");\n        }\n      });\n    }\n  },\n  activated: function activated() {\n    var _this2 = this;\n\n    axios.get(\"api/getAllEventosOfTipoIdNome/Palestra\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      if (response.status === 401) {\n        _this2.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n\n      _this2.allPalestra = response.data;\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this2.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n    axios.get(\"api/getAllPessoasIdNome\", {\n      withCredentials: true,\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(function (response) {\n      if (response.status === 401) {\n        _this2.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n\n      _this2.allPessoa = response.data;\n    }).catch(function (error) {\n      if (error.response.status === 401) {\n        _this2.$toasted.error(\"Sessão expirou.\");\n\n        bus.$emit(\"logout\");\n      }\n    });\n  },\n  methods: {\n    toggleRegistarPessoa: function toggleRegistarPessoa() {\n      this.registarPessoa = !this.registarPessoa;\n\n      if (this.registarPessoa) {\n        this.registarPessoaText = \"Voltar\";\n      } else {\n        this.registarPessoaText = \"Registar Pessoa\";\n      }\n    },\n    search: function search(input) {\n      if (input.length < 1) {\n        return [];\n      }\n\n      return allPessoa.filter(function (nome) {\n        return nome.toLowerCase().startsWith(input.toLowerCase());\n      });\n    },\n    clearFields: function clearFields() {\n      this.input.pessoa = null;\n      this.input.palestra = null;\n      this.input.primeiroEvento = false;\n      this.registoPessoas = [];\n      this.desativarEvento = false;\n      this.eventoText = \"Procurar por nome, data ou local\";\n    },\n    remover: function remover(pessoa) {\n      this.registoPessoas.pop(pessoa);\n      this.$toasted.show('Participante removido!');\n    },\n    toggleInsert: function toggleInsert() {\n      if (this.input.jaFreq) {\n        this.buttonText = \"Cancelar\";\n      } else {\n        this.buttonText = \"Adicionar Pessoa\";\n      }\n\n      this.input.jaFreq = !this.input.jaFreq;\n    },\n    checkIfNoEvents: function checkIfNoEvents(aux) {\n      return aux = 0 ? true : false;\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      if (this.registoPessoas.length <= 0) {\n        this.$toasted.error('Adicione no mínimo um participante!');\n        return;\n      }\n      /*PERCORRER ARRAY E REGISTAR PRESENÇA*/\n\n\n      for (var i = 0; i < this.registoPessoas.length; i++) {\n        instance.post(\"/api/postParticipacaoEvento\", {\n          idParticipante: this.registoPessoas[i][\"idPessoa\"],\n          idEvento: this.input.palestra[\"id\"],\n          flagPrimeiroEvento: this.registoPessoas[i][\"primeiroEvento\"],\n          flagCompareceu: 1\n        }, {\n          withCredentials: true,\n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n          }\n        }).then(function (response) {\n          _this3.$toasted.show('Presenças registadas com sucesso!');\n        }).catch(function (errors) {\n          if (errors.response.status === 400) {\n            _this3.$toasted.error('Campos incorrectos ou incompletos!');\n          }\n\n          if (errors.response.status === 401) {\n            _this3.$toasted.error('Sessão expirou!');\n\n            bus.$emit(\"logout\");\n          }\n        });\n      }\n\n      this.clearFields();\n    },\n    registarPresenca: function registarPresenca() {\n      var _this4 = this;\n\n      if (this.input.palestra === null) {\n        this.$toasted.error('Por favor adicione um evento!');\n        return;\n      }\n\n      if (this.input.pessoa === null) {\n        this.$toasted.error('Por favor adicione um participante!');\n        return;\n      }\n\n      this.desativarEvento = true;\n      this.eventoText = this.input.palestra[\"nome\"];\n      axios.get(\"api/getDadosPessoa/\".concat(this.input.pessoa.id), {\n        withCredentials: true,\n        headers: {\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          _this4.$toasted.error(\"Sessão expirou.\");\n\n          bus.$emit(\"logout\");\n        }\n\n        _this4.pessoa = response.data;\n        _this4.pessoa[\"primeiroEvento\"] = _this4.input.primeiroEvento;\n\n        if (_this4.registoPessoas.find(function (p) {\n          return p.idPessoa === _this4.pessoa.idPessoa;\n        }) != null) {\n          _this4.$toasted.error('Participante já adicionado!');\n\n          return;\n        }\n\n        _this4.registoPessoas.push(response.data);\n      }).catch(function (error) {\n        if (error.response.status === 401) {\n          _this4.$toasted.error(\"Sessão expirou.\");\n\n          bus.$emit(\"logout\");\n        }\n      });\n    }\n  },\n  components: {\n    ModelListSelect: ModelListSelect\n  }\n};",{"version":3,"sources":["RegistarPresencasPalestra.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"registarPresencasPalestra\">\n            <div class=\"form\">\n                <div class=\"palestra\">\n                    <label>Palestra:* <i class=\"obrigatorio\"></i></label>\n                    <div class=\"autocomplete\">\n                        <vue-single-select\n                                v-bind:disabled= \"desativarEvento\"\n                                v-model=\"input.palestra\"\n                                :options=\"allPalestra\"\n                                v-bind:placeholder= \"eventoText\"\n                                option-label=\"nome\"\n                        ></vue-single-select>\n                    </div>\n                </div>\n                <div class=\"participante\">\n                    <label>Participante:* <i class=\"obrigatorio\"></i></label>\n                    <div class=\"autocomplete\">\n                        <vue-single-select\n                                v-model=\"input.pessoa\"\n                                :options=\"allPessoa\"\n                                placeholder=\"Procurar por nome, email ou telemóvel\"\n                                option-label=\"nome\"\n\n                        ></vue-single-select>\n                    </div>\n                </div>\n                <div class=\"primeiroEvento\">\n                    <label>Primeiro Evento:* <i class=\"obrigatorio\"></i></label>\n                    <input type=\"checkbox\"  name=\"primeiroEvento\" v-model= \"input.primeiroEvento\">\n                </div>\n                <div class=\"buttonsRegisto\">\n                    <div class=\"buttonRegistarPresenca\">\n                        <button  v-on:click=\"registarPresenca()\">\n                            <i class=\"fas fa-plus-circle\"></i> {{this.registarPresencaText}}\n                        </button>\n                    </div>\n                    <div class=\"buttonRegistarPessoa\">\n                        <button  v-on:click=\"toggleRegistarPessoa()\">\n                            <i class=\"fas fa-plus-circle\"></i> {{this.registarPessoaText}}\n                        </button>\n                    </div>\n                </div>\n                <template v-if= \"registarPessoa\">\n                    <keep-alive>\n                        <RegistarPessoa/>\n                    </keep-alive>\n                </template>\n                <h3>Participantes do Evento</h3>\n                <table class=\"w3-table-all\" id=\"tabela\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Nome</th>\n                        <th>Email</th>\n                        <th>Telemóvel</th>\n                        <th>Primeiro Evento</th>\n                    </tr>\n                    <tr class=\"conteudo\" v-for=\"pessoa in registoPessoas\" :key=\"pessoa.idPessoa\">\n                        <td class=\"idPessoa\">{{ pessoa.idPessoa }}</td>\n                        <td>{{ pessoa.nome }}</td>\n                        <td>{{ pessoa.email }}</td>\n                        <td>{{ pessoa.telefone }}</td>\n                        <td> {{ pessoa.primeiroEvento === true ? \"Sim\" : \"Não\"}}</td>\n                        <td class=\"buttonsRemover\">\n                            <a class=\"fas fa-trash\" v-on:click=\"remover(pessoa)\" title=\"Remover \"></a>\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"registar\">\n                    <button type=\"submit\" v-on:click.prevent=\"submit()\"><i class=\"far fa-save\"></i> Registar Participações</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    /* eslint-disable */\n    var axios = require(\"axios\");\n    var instance = axios.create({\n        validateStatus: function (status) {\n            return status >= 200 && status < 300;\n        }\n    });\n    axios.interceptors.response.use(\n        response => response,\n        error => {\n            if (error.response.status === 401) {\n                bus.$emit(\"logout\");\n            }\n        });\n    import { bus } from \"../../main.js\";\n    import { ModelListSelect } from \"vue-search-select\";\n    export default {\n        name : 'RegistarPresencasPalestra',\n        data() {\n            var here = this;\n            return {\n                input: {\n                    palestra: null,\n                    pessoa: null,\n                    primeiroEvento : false\n                },\n                i: 0,\n                desativarEvento : false,\n                pessoa : null,\n                allPessoa: [],\n                allPalestra: [],\n                registoPessoas: [],\n                eventoText: \"Procurar por nome, data ou local\",\n                buttonText: \"Adicionar Pessoa\",\n                registarPresencaText: \"Registar Presença\",\n                registarPessoaText :\"Registar Pessoa\",\n                registarPessoa:false\n            };\n        },\n        watch:{\n            registarPessoa : function (){\n                axios\n                    .get(\"api/getAllPessoasIdNome\", {\n                        withCredentials: true,\n                        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n                    })\n                    .then(response => {\n                        if (response.status === 401) {\n                            this.$toasted.error(\"Sessão expirou.\");\n                            bus.$emit(\"logout\");\n                        }\n                        this.allPessoa = response.data;\n\n                    })\n                    .catch(error => {\n                        if(error.response.status === 401){\n                            this.$toasted.error(\"Sessão expirou.\");\n                            bus.$emit(\"logout\");\n                        }\n                    });\n            }\n        },\n        activated() {\n            axios\n                .get(\"api/getAllEventosOfTipoIdNome/Palestra\", {\n                    withCredentials: true,\n                    headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n                })\n                .then(response => {\n                    if (response.status === 401) {\n                        this.$toasted.error(\"Sessão expirou.\");\n                        bus.$emit(\"logout\");\n                    }\n                    this.allPalestra = response.data;\n\n                })\n                .catch(error => {\n                    if(error.response.status === 401){\n                        this.$toasted.error(\"Sessão expirou.\");\n                        bus.$emit(\"logout\");\n                    }\n                });\n\n            axios\n                .get(\"api/getAllPessoasIdNome\", {\n                    withCredentials: true,\n                    headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n                })\n                .then(response => {\n                    if (response.status === 401) {\n                        this.$toasted.error(\"Sessão expirou.\");\n                        bus.$emit(\"logout\");\n                    }\n                    this.allPessoa = response.data;\n\n                })\n                .catch(error => {\n                    if(error.response.status === 401){\n                        this.$toasted.error(\"Sessão expirou.\");\n                        bus.$emit(\"logout\");\n                    }\n                });\n\n\n        },\n        methods: {\n            toggleRegistarPessoa(){\n                this.registarPessoa = !this.registarPessoa;\n                if(this.registarPessoa){\n                    this.registarPessoaText = \"Voltar\";\n                }else{\n                    this.registarPessoaText = \"Registar Pessoa\";\n                }\n            },\n            search(input) {\n                if (input.length < 1) { return [] }\n                return allPessoa.filter(nome => {\n                    return nome.toLowerCase()\n                        .startsWith(input.toLowerCase())\n                })\n            },\n            clearFields(){\n                this.input.pessoa = null;\n                this.input.palestra = null;\n                this.input.primeiroEvento = false;\n                this.registoPessoas = [];\n                this.desativarEvento = false;\n                this.eventoText=\"Procurar por nome, data ou local\";\n            },\n            remover(pessoa){\n                this.registoPessoas.pop(pessoa);\n                this.$toasted.show('Participante removido!');\n            },\n            toggleInsert: function() {\n                if (this.input.jaFreq) {\n                    this.buttonText = \"Cancelar\";\n                } else {\n                    this.buttonText = \"Adicionar Pessoa\";\n                }\n                this.input.jaFreq = !this.input.jaFreq;\n            },\n            checkIfNoEvents: function(aux) {\n                return (aux = 0 ? true : false);\n            },\n            submit: function() {\n                if(this.registoPessoas.length <= 0){\n                    this.$toasted.error('Adicione no mínimo um participante!');\n                    return;\n                }\n                /*PERCORRER ARRAY E REGISTAR PRESENÇA*/\n                for (var i = 0; i < this.registoPessoas.length; i++) {\n                    instance\n                        .post(\n                            \"/api/postParticipacaoEvento\",\n                            {\n                                idParticipante: this.registoPessoas[i][\"idPessoa\"],\n                                idEvento: this.input.palestra[\"id\"],\n                                flagPrimeiroEvento: this.registoPessoas[i][\"primeiroEvento\"],\n                                flagCompareceu: 1\n                            },\n                            {\n                                withCredentials: true,\n                                headers: {\n                                    Authorization: `Bearer ` + sessionStorage.getItem(\"token\")\n                                }\n                            }\n                        )\n                        .then(response => {\n                            this.$toasted.show('Presenças registadas com sucesso!');\n                        })\n                        .catch((errors) => {\n                            if (errors.response.status === 400) {\n                                this.$toasted.error('Campos incorrectos ou incompletos!');\n                            }\n                            if (errors.response.status === 401) {\n                                this.$toasted.error('Sessão expirou!')\n                                bus.$emit(\"logout\");\n                            }\n\n                        });\n                }\n\n                this.clearFields();\n\n            },\n\n            registarPresenca: function() {\n                if(this.input.palestra === null){\n                    this.$toasted.error('Por favor adicione um evento!');\n                    return;\n                }\n\n                if(this.input.pessoa === null){\n                    this.$toasted.error('Por favor adicione um participante!');\n                    return;\n                }\n\n                this.desativarEvento = true;\n                this.eventoText = this.input.palestra[\"nome\"];\n\n                axios\n                    .get(`api/getDadosPessoa/${this.input.pessoa.id}`, {\n                        withCredentials: true,\n                        headers: { Authorization: `Bearer ` + sessionStorage.getItem(\"token\") }\n                    })\n                    .then(response => {\n                        if (response.status === 401) {\n                            this.$toasted.error(\"Sessão expirou.\");\n                            bus.$emit(\"logout\");\n                        }\n                        this.pessoa = response.data;\n                        this.pessoa[\"primeiroEvento\"] = this.input.primeiroEvento;\n\n                        if((this.registoPessoas.find(p => p.idPessoa === this.pessoa.idPessoa)) != null){\n                            this.$toasted.error('Participante já adicionado!');\n                            return;\n                        }\n\n                        this.registoPessoas.push(response.data);\n\n                    })\n                    .catch(error => {\n                        if(error.response.status === 401){\n                            this.$toasted.error(\"Sessão expirou.\");\n                            bus.$emit(\"logout\");\n                        }\n                    });\n\n            }\n        },\n        components: {\n            ModelListSelect\n        }\n    };\n</script>\n\n<style>\n    @import url(\"https://fonts.googleapis.com/css?family=Open+Sans\");\n    @import url(\"https://www.w3schools.com/w3css/4/w3.css\");\n\n\n    h1 {\n        text-align: center;\n        font-family: \"Open Sans\";\n    }\n\n    h2 {\n        text-align: center;\n        font-family: \"Open Sans\";\n    }\n    .registarPresencasPalestra {\n        font-family: \"Open Sans\";\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .registarPresencasPalestra .conteudo .buttonsRemover {\n        cursor: pointer;\n        background-color:oldlace;\n        width: 2%;\n        border-top:none;\n        border-color: oldlace;\n    }\n\n    .registarPresencasPalestra .conteudo .buttonsRemover a:hover {\n        font-weight: bold;\n        font-size: 13px;\n    }\n\n\n    .registarPresencasPalestra .form {\n        display: inline-grid;\n        grid-row-gap: 10px;\n        grid-column-gap: 50px;\n        background-color: oldlace;\n        width: 100%;\n    }\n    .registarPresencasPalestra .form .obrigatorio{\n        color: red;\n    }\n\n    .registarPresencasPalestra .palestra {\n        grid-column-start: 1;\n        grid-row-start: 1;\n        margin-top: 10px;\n        margin-left: 400px;\n        margin-bottom: 10px;\n        margin-right: 270px;\n    }\n\n    .registarPresencasPalestra .palestra .autocomplete{\n        display:inline-block;\n        width: 59%;\n        margin-left:38px;\n    }\n\n    .registarPresencasPalestra .participante {\n        grid-column-start: 1;\n        grid-row-start: 1;\n        margin-top: 80px;\n        margin-left: 400px;\n        margin-bottom: 10px;\n        margin-right: 270px;\n    }\n\n    .registarPresencasPalestra .participante .autocomplete {\n        display:inline-block;\n        width: 59%;\n        margin-left:11px;\n    }\n\n    .registarPresencasPalestra .primeiroEvento {\n        margin-left: 400px;\n        margin-top: 5px;\n        margin-bottom: 10px;\n    }\n\n\n    .registarPresencasPalestra .buttonsRegisto{\n        margin-bottom: 5px;\n        margin-left: 400px  ;\n        display: -webkit-box;\n    }\n\n\n    .registarPresencasPalestra .buttonsRegisto button {\n        text-align: center;\n        cursor: pointer;\n        background-color: #a2e3fb;\n        border: none;\n        border-radius: 4px;\n    }\n\n    .registarPresencasPalestra .buttonsRegisto button:hover {\n        background-color: #43cbfd;;\n    }\n\n\n    .registarPresencasPalestra .registar {\n        margin-left: 1050px;\n        margin-bottom: 30px;\n\n        margin-top:100px;\n    }\n\n    .registarPresencasPalestra .registar button {\n        height: 50px;\n        font-size: medium;\n        cursor: pointer;\n        border: none;\n        background-color: #e99d72;\n        border-radius: 6px;\n        padding-left: 15px;\n        padding-right: 15px;\n        margin: auto;\n    }\n    .registarPresencasPalestra .registar button:hover {\n        background-color: #fab995;\n    }\n\n</style>"],"sourceRoot":"src/components/registos"}]}